///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2023, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы


#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок



#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗагрузитьЦеныПоставщика(Команда)
	
	Если Не ЗначениеЗаполнено(ТекущийПоставщик) Тогда
		
		ОбщегоНазначенияКлиент.СообщитьПользователю("Не указан поставщик", , , "ТекущийПоставщик", );
		Возврат;
	КонецЕсли;
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Заголовок = "Выберите файл";
	Диалог.ПолноеИмяФайла = ""; 
	Фильтр = "xlsx (*.xlsx)|*.xlsx"; 
	Диалог.Фильтр = Фильтр; 
	Диалог.МножественныйВыбор = Ложь;	
	Диалог.Показать(Новый ОписаниеОповещения("ЗагрузитьЦеныПоставщикаЗавершение", ЭтотОбъект, 
		Новый Структура("Диалог", Диалог)));		
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗагрузитьЦеныПоставщикаЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Диалог = ДополнительныеПараметры.Диалог; 
	
	Если (ВыбранныеФайлы <> Неопределено) Тогда				
		
		АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(Диалог.ПолноеИмяФайла));		
		ЗагрузитьЦеныПоставщикаНаСервере(АдресВоВременномХранилище);				
	КонецЕсли;
	
КонецПроцедуры
	
&НаСервере
Функция ИнициализироватьТаблицуЗначенийНаСервере()
	
	ТаблицаЗначений = Новый ТаблицаЗначений;
	ТаблицаЗначений.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата", , ,
											   	Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ТаблицаЗначений.Колонки.Добавить("Поставщик", Новый ОписаниеТипов("СправочникСсылка.mega_Контрагенты"));
	ТаблицаЗначений.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.mega_Номенклатура"));
	ТаблицаЗначений.Колонки.Добавить("Цена", Новый ОписаниеТипов("Число",
											 	Новый КвалификаторыЧисла(15, 2, ДопустимыйЗнак.Любой)));
	
	Возврат ТаблицаЗначений;
КонецФункции
	
&НаСервере
Функция ПолучитьДанныеТабличногоДокументаНаСервере(ТабличныйДокумент)
	
	НомерСтолбцаКод = 1;
	НомерСтолбцаНаименование = 2;
	НомерСтолбцаЦена = 3;
	Период = ТекущаяДатаСеанса();
	
	ТаблицаЗначений = ИнициализироватьТаблицуЗначенийНаСервере();
	
	НомерСтроки = 2;	
	Наименование = СокрЛП(ТабличныйДокумент.ПолучитьОбласть(НомерСтроки, НомерСтолбцаНаименование, 
		НомерСтроки, НомерСтолбцаНаименование).ТекущаяОбласть.Текст);
	Пока Наименование <> "" Цикл
		
		Код = СокрЛП(ТабличныйДокумент.ПолучитьОбласть(НомерСтроки, НомерСтолбцаКод, 
				НомерСтроки, НомерСтолбцаКод).ТекущаяОбласть.Текст);
				
		Цена = СокрЛП(ТабличныйДокумент.ПолучитьОбласть(НомерСтроки, НомерСтолбцаЦена, 
				НомерСтроки, НомерСтолбцаЦена).ТекущаяОбласть.Текст);
		
		Номенклатура = Справочники.mega_НоменклатураПоставщиков.НайтиНоменклатуруПоДаннымПоставщика(
			Наименование, ТекущийПоставщик, Код);
		
		Если ЗначениеЗаполнено(Номенклатура) Тогда
			
			НоваяСтрока = ТаблицаЗначений.Добавить();
			НоваяСтрока.Период = Период;
			НоваяСтрока.Поставщик = ТекущийПоставщик;
			НоваяСтрока.Номенклатура = Номенклатура;
			НоваяСтрока.Цена = Цена;
		КонецЕсли;
		
		НомерСтроки = НомерСтроки + 1;
		Наименование = СокрЛП(ТабличныйДокумент.ПолучитьОбласть(НомерСтроки, НомерСтолбцаНаименование, 
			НомерСтроки, НомерСтолбцаНаименование).ТекущаяОбласть.Текст);
	КонецЦикла;
	
	Возврат ТаблицаЗначений;
КонецФункции

&НаСервере
Функция ПреобразоватьТаблицуЗнанийВВыборкуНаСервере(ТаблицаЗначений)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВременнаяТаблица.Период,
		|	ВременнаяТаблица.Поставщик,
		|	ВременнаяТаблица.Номенклатура,
		|	ВременнаяТаблица.Цена
		|ПОМЕСТИТЬ втВременнаяТаблица
		|ИЗ
		|	&ТаблицаЗначений КАК ВременнаяТаблица
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втВременнаяТаблица.Период,
		|	втВременнаяТаблица.Поставщик,
		|	втВременнаяТаблица.Номенклатура,
		|	втВременнаяТаблица.Цена
		|ИЗ
		|	втВременнаяТаблица КАК втВременнаяТаблица";
	Запрос.УстановитьПараметр("ТаблицаЗначений", ТаблицаЗначений);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();	
	Возврат ВыборкаДетальныеЗаписи;	
КонецФункции

&НаСервере
Процедура ЗагрузитьЦеныПоставщикаНаСервере(АдресВоВременномХранилище)
	
	//Получаем файл на сервере
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресВоВременномХранилище);
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("xlsx");
	ДвоичныеДанные.Записать(ИмяВременногоФайла);
	
	//Читаем из него данные
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Прочитать(ИмяВременногоФайла);
	
	//Работаем с данными, готовим
	ДанныеТабличногоДокумента = ПолучитьДанныеТабличногоДокументаНаСервере(ТабличныйДокумент);
	ВыборкаДетальныеЗаписи = ПреобразоватьТаблицуЗнанийВВыборкуНаСервере(ДанныеТабличногоДокумента);
	//Работаем с данными, пишем в регистр
	РегистрыСведений.mega_ЦеныПоставщиков.ЗафиксироватьЦены(ВыборкаДетальныеЗаписи);
	
	//Удаляем файл
	УдалитьФайлы(ИмяВременногоФайла);
КонецПроцедуры

#КонецОбласти


