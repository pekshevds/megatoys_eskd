
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс


// Удалить движения.
// 
// Параметры:
//  Регистратор - ДокументСсылка.mega_ПриходнаяНакладная ИЛИ ДокументСсылка.mega_УстановкаЦенПлановойСебестоимости
// 
// Возвращаемое значение:
//  Булево - Удалить движения
Функция УдалитьДвижения(Регистратор) Экспорт
	
	НаборЗаписей = СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(Регистратор);
		
	НаборЗаписей.Записать();
	
	Возврат Истина;
КонецФункции

// Выполнить движение.
// 
// Параметры:
//  Регистратор - ДокументСсылка.mega_ПриходнаяНакладная ИЛИ ДокументСсылка.mega_УстановкаЦенПлановойСебестоимости
//  ВыборкаИзРезультатаЗапроса - ВыборкаИзРезультатаЗапроса - Выборка из результата запроса
// 
// Возвращаемое значение:
//  Булево - Выполнить движение
Функция ВыполнитьДвижение(Регистратор, ВыборкаИзРезультатаЗапроса)Экспорт
	ВыборкаИзРезультатаЗапроса.Сбросить();
	
	НаборЗаписей = СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(Регистратор);
	
	Пока ВыборкаИзРезультатаЗапроса.Следующий() Цикл
		
		Движение = НаборЗаписей.Добавить();						
		ЗаполнитьЗначенияСвойств(Движение, ВыборкаИзРезультатаЗапроса);		
	КонецЦикла; 
	
	НаборЗаписей.Записать();
	
	Возврат Истина;
КонецФункции

// Получить последнюю цену плановой себестоимости.
// 
// Параметры:
//  Номенклатура - СправочникСсылка.mega_Номенклатура
//  ВидСтадииОбработки - СправочникСсылка.mega_ВидыСтадийОбработки
//  ДатаСреза - Дата - Дата получения цен
// 
// Возвращаемое значение:
//  Число --- Число(15, 2)
Функция ПолучитьПоследнююЦенуПлановойСебестоимости(Знач Номенклатура, Знач ВидСтадииОбработки, Знач ДатаСреза = Неопределено) Экспорт

	Массив = Новый Массив;
	Массив.Добавить(Номенклатура);
	ВыборкаДетальныеЗаписи = ПолучитьПоследниеЦеныПлановойСебестоимости(Массив, ДатаСреза);
	
	Если ВыборкаДетальныеЗаписи.НайтиСледующий(Новый Структура("ВидСтадииОбработки", ВидСтадииОбработки)) Тогда
		
		Возврат ВыборкаДетальныеЗаписи.Цена;
	КонецЕсли;
	
	Возврат 0;
КонецФункции


// Получить последние цены плановой себестоимости.
// 
// Параметры:
//  Номенклатура - Массив из СправочникСсылка.mega_Номенклатура
//  ДатаСреза - Дата - Дата получения цен
// 
// Возвращаемое значение:
//  ВыборкаИзРезультатаЗапроса --- Получить последние цены плановой себестоимости (Номенклатура, ВидСтадииОбработки, Цена)
Функция ПолучитьПоследниеЦеныПлановойСебестоимости(Знач Номенклатура, Знач ДатаСреза = Неопределено) Экспорт
	
	Если Не ЗначениеЗаполнено(ДатаСреза) Тогда
		
		ДатаСреза = ТекущаяДатаСеанса();
	КонецЕсли;
	ДатаСреза = КонецДня(ДатаСреза);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	mega_ЦеныПлановойСебестоимостиСрезПоследних.Номенклатура,
		|	mega_ЦеныПлановойСебестоимостиСрезПоследних.ВидСтадииОбработки,
		|	mega_ЦеныПлановойСебестоимостиСрезПоследних.Цена
		|ИЗ
		|	РегистрСведений.mega_ЦеныПлановойСебестоимости.СрезПоследних(&ДатаСреза, Номенклатура В (&Номенклатура)) КАК
		|		mega_ЦеныПлановойСебестоимостиСрезПоследних";
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("ДатаСреза", ДатаСреза);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Возврат ВыборкаДетальныеЗаписи;
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

// Код процедур и функций

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Код процедур и функций

#КонецОбласти

#КонецЕсли
