
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Добавить запись.
// 
// Параметры:
//  Подразделение - СправочникСсылка.mega_Подразделения - Подразделение
//  Номенклатура - СправочникСсылка.mega_Номенклатура - Номенклатура
//  МинимальныйДопустимыйОстаток - Число - Минимальный допустимый остаток
//  РекомендуемыйОстаток - Число - Рекомендуемый остаток
//  Дата - Неопределено - Дата
// 
// Возвращаемое значение:
//  Булево - Истина - если запись успешно добавлена, иначе Ложь
Функция ДобавитьЗапись(Подразделение, Номенклатура, 
	МинимальныйДопустимыйОстаток = 1, РекомендуемыйОстаток = 1, Дата = Неопределено) Экспорт
	
	Если Не ЗначениеЗаполнено(Дата) Тогда
		Дата = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Попытка
		МенеджерЗаписи = СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Период = Дата;
		МенеджерЗаписи.Подразделение = Подразделение;
		МенеджерЗаписи.Номенклатура = Номенклатура;
		МенеджерЗаписи.МинимальныйДопустимыйОстаток = МинимальныйДопустимыйОстаток;
		МенеджерЗаписи.РекомендуемыйОстаток = РекомендуемыйОстаток;
		МенеджерЗаписи.Записать();
	Исключение
		 Возврат Ложь;
	КонецПопытки;
	Возврат Истина;
КонецФункции

// Получить остатки подразделений.
// 
// Параметры:
//  Подразделения - Массив Из СправочникСсылка.mega_Подразделения - Подразделения
//  ДатаСреза - Неопределено - Дата среза
// 
// Возвращаемое значение:
//  ВыборкаИзРезультатаЗапроса - Получить остатки подразделений
Функция ПолучитьОстаткиПодразделений(Подразделения, ДатаСреза = Неопределено) Экспорт
	Если Не ЗначениеЗаполнено(ДатаСреза) Тогда
		ДатаСреза = ТекущаяДатаСеанса();
	КонецЕсли;
		
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ОстаткиНоменклатурыСрезПоследних.Подразделение,
		|	ОстаткиНоменклатурыСрезПоследних.Номенклатура,
		|	ОстаткиНоменклатурыСрезПоследних.МинимальныйДопустимыйОстаток,
		|	ОстаткиНоменклатурыСрезПоследних.РекомендуемыйОстаток
		|ИЗ
		|	РегистрСведений.mega_ОстаткиНоменклатуры.СрезПоследних(&ДатаСреза, Подразделение В (&Подразделения)) КАК
		|		ОстаткиНоменклатурыСрезПоследних";
	
	Запрос.УстановитьПараметр("Подразделение", Подразделения);
	Запрос.УстановитьПараметр("ДатаСреза", ДатаСреза);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Возврат ВыборкаДетальныеЗаписи;	
КонецФункции

// Получить остатки номенклатуры.
// 
// Параметры:
//  Номенклатура - Массив Из СправочникСсылка.mega_Номенклатура - Список номенклатуры
//  ДатаСреза - Дата - Дата получения остатков
// 
// Возвращаемое значение:
//  ВыборкаИзРезультатаЗапроса - Получить остатки номенклатуры
Функция ПолучитьОстаткиНоменклатуры(Номенклатура, ДатаСреза = Неопределено) Экспорт
	Если Не ЗначениеЗаполнено(ДатаСреза) Тогда
		ДатаСреза = ТекущаяДатаСеанса();
	КонецЕсли;
		
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ОстаткиНоменклатурыСрезПоследних.Подразделение,
		|	ОстаткиНоменклатурыСрезПоследних.Номенклатура,
		|	ОстаткиНоменклатурыСрезПоследних.МинимальныйДопустимыйОстаток,
		|	ОстаткиНоменклатурыСрезПоследних.РекомендуемыйОстаток
		|ИЗ
		|	РегистрСведений.mega_ОстаткиНоменклатуры.СрезПоследних(&ДатаСреза, Номенклатура В (&Номенклатура)) КАК
		|		ОстаткиНоменклатурыСрезПоследних";
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("ДатаСреза", ДатаСреза);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Возврат ВыборкаДетальныеЗаписи;	
КонецФункции

// Получить остатки.
// 
// Параметры:
//  Подразделения - Массив Из СправочникСсылка.mega_Подразделения - Подразделения
//  Номенклатура - Массив Из СправочникСсылка.mega_Номенклатура - Список номенклатуры
//  ДатаСреза - Неопределено - Дата среза
// 
// Возвращаемое значение:
//  ВыборкаИзРезультатаЗапроса - Получить остатки
Функция ПолучитьОстатки(Подразделения, Номенклатура, ДатаСреза = Неопределено) Экспорт
	
	Если Не ЗначениеЗаполнено(ДатаСреза) Тогда
		ДатаСреза = ТекущаяДатаСеанса();
	КонецЕсли;
		
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ОстаткиНоменклатурыСрезПоследних.Подразделение КАК Подразделение,
		|	ОстаткиНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
		|	ОстаткиНоменклатурыСрезПоследних.МинимальныйДопустимыйОстаток,
		|	ОстаткиНоменклатурыСрезПоследних.РекомендуемыйОстаток
		|ИЗ
		|	РегистрСведений.mega_ОстаткиНоменклатуры.СрезПоследних(&ДатаСреза, Подразделение В (&Подразделения)
		|	И Номенклатура В (&Номенклатура)) КАК ОстаткиНоменклатурыСрезПоследних
		|
		|УПОРЯДОЧИТЬ ПО
		|	Подразделение,
		|	Номенклатура";
	
	Запрос.УстановитьПараметр("Подразделения", Подразделения);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("ДатаСреза", ДатаСреза);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Возврат ВыборкаДетальныеЗаписи;	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

// Код процедур и функций

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Код процедур и функций

#КонецОбласти

#КонецЕсли
