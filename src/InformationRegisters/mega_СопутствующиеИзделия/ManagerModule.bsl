
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Опередяет наличие сопутствующих изделий
// 
// Параметры:
//  Владелец - СправочникСсылка.mega_Номенклатура - Владелец
// 
// Возвращаемое значение:
//  Булево - Есть зависимые изделия
Функция ЕстьСопутствующиеИзделия(Владелец) Экспорт
	
	ЕстьЗависимыеИзделия = Ложь;
	
	ВыборкаДетальныеЗаписи = ПолучитьСопутствующиеИзделия(Владелец);	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

		ЕстьЗависимыеИзделия = Истина;
	КонецЦикла;
	
	Возврат ЕстьЗависимыеИзделия;
КонецФункции

// Получить сопутствующие изделия.
// 
// Параметры:
//  Владелец - СправочникСсылка.mega_Номенклатура - Владелец
// 
// Возвращаемое значение:
//  ВыборкаИзРезультатаЗапроса - Получить зависимые изделия
Функция ПолучитьСопутствующиеИзделия(Владелец) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗависимыеИзделия.Номенклатура,
		|	ЗависимыеИзделия.Количество
		|ИЗ
		|	РегистрСведений.mega_СопутствующиеИзделия КАК ЗависимыеИзделия
		|ГДЕ
		|	ЗависимыеИзделия.Владелец = &Владелец";
	
	Запрос.УстановитьПараметр("Владелец", Владелец);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Возврат ВыборкаДетальныеЗаписи;	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

// Код процедур и функций

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти

#КонецЕсли
