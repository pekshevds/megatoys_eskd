///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2023, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
		
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СменноеЗадание";
	КомандаПечати.Представление = НСтр("ru = 'Сменное задание'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru = 'Сменное задание'");
	КомандаПечати.СписокФорм    = "ФормаДокумента,ФормаСписка";
	КомандаПечати.ДополнительныеПараметры.Вставить("НеВыводитьВКомплекте",Истина);
	КомандаПечати.Порядок       = 10;	
	
КонецПроцедуры

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СменноеЗадание") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "СменноеЗадание", "Сменное задание", 
			ПечатьСменногоеЗадания(МассивОбъектов, ОбъектыПечати, ПараметрыПечати),,"Документ.mega_СменноеЗадание.ПФ_MXL_СменноеЗадание");
	КонецЕсли;
		
КонецПроцедуры

// Функция формирует табличный документ с печатной формой накладной,
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной
//
Функция ПечатьСменногоеЗадания(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)

	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб			= Истина;
	ТабличныйДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.КлючПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_СменноеЗадание_СменноеЗадание";
			
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СменноеЗадание.Ссылка КАК Ссылка,
	|	СменноеЗадание.Ссылка.Дата КАК Дата,
	|	СменноеЗадание.Ссылка.Номер,
	|	СменноеЗадание.Ссылка.Автор,
	|	СменноеЗадание.Ссылка.ДатаСмены КАК Смена,
	|	СменноеЗадание.Ссылка.Подразделение КАК Подразделение,
	|	СменноеЗадание.Ссылка.ПроизводственныйРесурс КАК ПроизводственныйРесурс,
	|	СменноеЗадание.Ссылка.Мастер КАК Мастер,
	|	СменноеЗадание.Ответственный,
	|	СменноеЗадание.ТехнологическаяОперация КАК ТехнологическаяОперация,
	|	СменноеЗадание.ТехнологическаяОперацияЕдиницаИзмерения КАК ТехнологическаяОперацияЕдиницаИзмерения,
	|	СменноеЗадание.ТехнологическаяОперацияКоличество КАК ТехнологическаяОперацияКоличество,
	//|	СменноеЗадание.ТехнологическаяОперацияВремяВыполнения КАК ВремяВыполнения,
	|	СменноеЗадание.ТехнологическаяОперацияКоличество КАК ВремяВыполнения,
	|	СменноеЗадание.ВидСтадииОбработки,
	|	СменноеЗадание.Спецификация,
	|	СменноеЗадание.Номенклатура,
	|	СменноеЗадание.Номенклатура.ВидДетали КАК ВидДетали,
	|	СменноеЗадание.ЕдиницаИзмерения,
	|	СменноеЗадание.Количество КАК Количество,
	|	СменноеЗадание.Номенклатура.КодДетали КАК КодДетали
	|ИЗ
	|	Документ.mega_СменноеЗадание.ТехнологическиеОперации КАК СменноеЗадание
	|ГДЕ
	|	СменноеЗадание.Ссылка В (&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Номенклатура
	|ИТОГИ
	|ПО
	|	Ссылка,
	|	Номенклатура";
	
	Шапка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	Пока Шапка.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		//ПроизводственныйРесурс = Шапка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.mega_СменноеЗадание.ПФ_MXL_СменноеЗадание");
	
		Если НЕ ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Выводим шапку накладной

		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.Заголовок = СтрШаблон("Сменное задание %1 от %2", Шапка.Номер, Шапка.Дата);
		ОбластьМакета.Параметры.ПроизводственныйРесурс = Шапка.ПроизводственныйРесурс;
		ОбластьМакета.Параметры.Мастер = Шапка.Мастер;
		ОбластьМакета.Параметры.Подразделение = Шапка.Подразделение;
		ОбластьМакета.Параметры.Смена = Формат(Шапка.Смена, "ДФ=dd.MM.yyyy;");		
		ТабличныйДокумент.Вывести(ОбластьМакета);

		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ИтогоПоДокументуКоличество = 0;
		ИтогоПоДокументуВремяВыполнения = 0;
		
		НомерСтроки = 1;
		Номенклатура = Шапка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока Номенклатура.Следующий() Цикл 
			
			ИтогоКоличество = 0;
			ИтогоВремяВыполнения = 0;
			
			Состав = Номенклатура.Выбрать();
			Пока Состав.Следующий() Цикл
				ОбластьМакета = Макет.ПолучитьОбласть("Строка");
				ОбластьМакета.Параметры.Заполнить(Состав);
			
				//ДатаЧастями = mega_МетодыРаботыСДатами.ПолучитьДатуЧастями(Состав.ВремяВыполнения);
				//ВремяВЧасахМинутах = mega_МетодыРаботыСДатами.ПолучитьВремяВЧасахМинутахСекундахСтрокой(ДатаЧастями);
				//			
				//ОбластьМакета.Параметры.ВремяВыполнения = ВремяВЧасахМинутах;
				ВремяВыполнения = Цел(Состав.ВремяВыполнения / 60);
				ОбластьМакета.Параметры.ВремяВыполнения = ВремяВыполнения;
				ОбластьМакета.Параметры.НомерСтроки = НомерСтроки;
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
				НомерСтроки = НомерСтроки + 1;
				ИтогоКоличество = ИтогоКоличество + ОбластьМакета.Параметры.Количество;
				ИтогоВремяВыполнения = ИтогоВремяВыполнения + ВремяВыполнения;				
			КонецЦикла;
			
			ИтогоПоДокументуКоличество = ИтогоПоДокументуКоличество + ИтогоКоличество;
			ИтогоПоДокументуВремяВыполнения = ИтогоПоДокументуВремяВыполнения + ИтогоВремяВыполнения;
			
			ОбластьМакета = Макет.ПолучитьОбласть("Подитог");
			ОбластьМакета.Параметры.НадписьИтог = "По " + Строка(Номенклатура.ВидДетали);
			ОбластьМакета.Параметры.Количество = ИтогоКоличество;
			ОбластьМакета.Параметры.ВремяВыполнения = ИтогоВремяВыполнения;
			ТабличныйДокумент.Вывести(ОбластьМакета);
		КонецЦикла;		
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подитог");
		ОбластьМакета.Параметры.НадписьИтог = "По документу";
		ОбластьМакета.Параметры.Количество = ИтогоПоДокументуКоличество;
		ОбластьМакета.Параметры.ВремяВыполнения = ИтогоПоДокументуВремяВыполнения;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");		
		ТабличныйДокумент.Вывести(ОбластьМакета);

		
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
				
	КонецЦикла;
	
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	Возврат ТабличныйДокумент;

КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ГрупповоеИзменениеОбъектов

// Возвращает реквизиты объекта, которые разрешается редактировать
// с помощью обработки группового изменения реквизитов.
//
// Возвращаемое значение:
//  Массив из Строка
//
Функция РеквизитыРедактируемыеВГрупповойОбработке() Экспорт
	
	Результат = Новый Массив;
	Результат.Добавить("Автор");	
	Результат.Добавить("Ответственный");	
	Результат.Добавить("Комментарий");
	Возврат Результат;
	
КонецФункции

// Конец СтандартныеПодсистемы.ГрупповоеИзменениеОбъектов

// СтандартныеПодсистемы.Взаимодействия

// Конец СтандартныеПодсистемы.Взаимодействия

// СтандартныеПодсистемы.УправлениеДоступом

// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Ответственный, Отключено КАК Ложь)
	|	ИЛИ ЗначениеРазрешено(Автор, Отключено КАК Ложь)";
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

// СтандартныеПодсистемы.ПодключаемыеКоманды

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
КонецПроцедуры

// Для использования в процедуре ДобавитьКомандыСозданияНаОсновании других модулей менеджеров объектов.
// Добавляет в список команд создания на основании этот объект.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
// Возвращаемое значение:
//  СтрокаТаблицыЗначений, Неопределено - описание добавленной команды.
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	
	Команда = СозданиеНаОсновании.ДобавитьКомандуСозданияНаОсновании(КомандыСозданияНаОсновании, Метаданные.Документы.Встреча);
	Если Команда <> Неопределено Тогда
		Команда.ФункциональныеОпции = "ИспользоватьПрочиеВзаимодействия";
		Команда.Важность = "СмТакже";
	КонецЕсли;
	
	Возврат Команда;
	
КонецФункции

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытий

#КонецОбласти

#КонецЕсли
