///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2023, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура РассчитатьТабличныеЧасти()Экспорт
	
	ЗаполнитьМатериалы();
	ЗаполнитьТехнологическиеОперации();
КонецПроцедуры

Процедура ЗаполнитьПредыдущуюСтадиюОбработки()Экспорт
	
	СтадияОбработки = Справочники.mega_Спецификации.ПолучитьСтадиюОбработкиПоВидуСтадииОбработки(Спецификация, ВидСтадииОбработки);		
	ПредыдущаяСтадияОбработки = Справочники.mega_Спецификации.ПолучитьПредыдущуюСтадиюОбработки(Спецификация, СтадияОбработки);
	ПредыдущийВидСтадииОбработки = ПредыдущаяСтадияОбработки.ВидСтадииОбработки;
	
КонецПроцедуры

Процедура ЗаполнитьНаОснованииПроизводственнойОперации(Основание)Экспорт
		
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Основание, "Номенклатура,ЕдиницаИзмерения,Спецификация,Количество");
	ТекущаяСтадияОбработки = Справочники.mega_Спецификации.ПолучитьСтадиюОбработкиПоВидуСтадииОбработки(Основание.Спецификация, Основание.ВидСтадииОбработки);
	СледующаяСтадияОбработки = Справочники.mega_Спецификации.ПолучитьСледующуюСтадиюОбработки(Основание.Спецификация, ТекущаяСтадияОбработки);
	
	ВидСтадииОбработки = СледующаяСтадияОбработки.ВидСтадииОбработки;
	ПредыдущийВидСтадииОбработки = Основание.ВидСтадииОбработки;
	РассчитатьТабличныеЧасти();
КонецПроцедуры

Процедура ЗаполнитьДокумент()Экспорт 
	
	Если Не ЗначениеЗаполнено(ЕдиницаИзмерения) Тогда 			
		
		ЕдиницаИзмерения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Номенклатура, "ЕдиницаИзмерения");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Спецификация) Тогда 			
		
		Спецификация = Справочники.mega_Спецификации.ПолучитьОсновнуюСпецификациюНоменклатуры(Номенклатура);
	КонецЕсли;
	
	ЗаполнитьПредыдущуюСтадиюОбработки(); 	
	РассчитатьТабличныеЧасти();
КонецПроцедуры

#Область ДляВызоваИзДругихПодсистем

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
    	
//	Ответственный    = Пользователи.ТекущийПользователь();
	Автор            = Пользователи.ТекущийПользователь();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
	
		ДанныеЗаполнения.Свойство("Номенклатура", Номенклатура);
		ДанныеЗаполнения.Свойство("ЕдиницаИзмерения", ЕдиницаИзмерения);
		ДанныеЗаполнения.Свойство("Спецификация", Спецификация);
		ДанныеЗаполнения.Свойство("ВидСтадииОбработки", ВидСтадииОбработки);
		ДанныеЗаполнения.Свойство("Количество", Количество);
		
		ЗаполнитьДокумент();		
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// регистр mega_ПроизводственныеЗапасы Приход	
//	Движения.mega_ПроизводственныеЗапасы.Записывать = Истина;
//	Движения.mega_ВыработкаИсполнителей.Записывать = Истина;
//	
//	Движение = Движения.mega_ПроизводственныеЗапасы.Добавить();
//	Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
//	Движение.Период = Дата;
//	Движение.Номенклатура = Номенклатура;
//	Движение.ВидСтадииОбработки = ВидСтадииОбработки;
//	Движение.Количество = Количество;
//	
	Если ЗначениеЗаполнено(ПредыдущийВидСтадииОбработки) Тогда 
		
//		Движение = Движения.mega_ПроизводственныеЗапасы.Добавить();
//		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
//		Движение.Период = Дата;
//		Движение.Номенклатура = Номенклатура;
//		Движение.ВидСтадииОбработки = ПредыдущийВидСтадииОбработки;
//		Движение.Количество = Количество;		
	КонецЕсли;
	
	Для Каждого ТекСтрока Из Материалы Цикл 
//		
//		Движение = Движения.mega_ПроизводственныеЗапасы.Добавить();
//		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
//		Движение.Период = Дата;
//		Движение.Номенклатура = ТекСтрока.Номенклатура;		
//		Движение.Количество = Количество;
	КонецЦикла;
	
	Для Каждого ТекСтрока Из ТехнологическиеОперации Цикл 
		
//		Движение = Движения.mega_ВыработкаИсполнителей.Добавить();		
//		Движение.Период = Дата;
//		Движение.Исполнитель = Ответственный;
//		Движение.ТехнологическаяОперация = ТекСтрока.Номенклатура;
//		Движение.Количество = ТекСтрока.Количество;
//		Движение.Время = ТекСтрока.ВремяВыполнения;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
		
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
		
//	Ответственный    = Пользователи.ТекущийПользователь();
	Автор            = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
    
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьМатериалы()  
	
	Материалы.Очистить();	
	ТекущаяСтадияОбработки = 
		Справочники.mega_Спецификации.ПолучитьСтадиюОбработкиПоВидуСтадииОбработки(Спецификация, ВидСтадииОбработки);
	
	СтрокиМатериалы = 
		Справочники.mega_Спецификации.ПолучитьМатериалыСпецификацииПоКлючуСвязи(Спецификация, ТекущаяСтадияОбработки.КлючСвязи);
		
	Пока СтрокиМатериалы.Следующий()  Цикл 
		
		НоваяСтрока = Материалы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокиМатериалы);
		НоваяСтрока.Количество = НоваяСтрока.Количество / 
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Спецификация, "Количество") * Количество;
	КонецЦикла;	
КонецПроцедуры

Процедура ЗаполнитьТехнологическиеОперации()
	
	ТехнологическиеОперации.Очистить();	
	ТекущаяСтадияОбработки = 
		Справочники.mega_Спецификации.ПолучитьСтадиюОбработкиПоВидуСтадииОбработки(Спецификация, ВидСтадииОбработки);
	СтрокиТехнологическиеОперации = 
		Справочники.mega_Спецификации.ПолучитьТехнологическиеОперацииСпецификацииПоКлючуСвязи(Спецификация, ТекущаяСтадияОбработки.КлючСвязи);
	
	Пока СтрокиТехнологическиеОперации.Следующий() Цикл 
		
		НоваяСтрока = ТехнологическиеОперации.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокиТехнологическиеОперации);
		НоваяСтрока.Количество = НоваяСтрока.Количество / 
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Спецификация, "Количество") * Количество;
		НоваяСтрока.ВремяВыполнения = НоваяСтрока.ВремяВыполнения / 
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Спецификация, "Количество") * Количество;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли