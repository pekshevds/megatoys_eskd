///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2023, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
    	
	Ответственный    = Пользователи.ТекущийПользователь();
	Автор            = Пользователи.ТекущийПользователь();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.mega_ЗаявкаНаПеремещение") И 
		ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		
		//ДокументОснование = ДанныеЗаполнения;	
		ЗаполнитьПоЗаявкеНаПеремещение(ДанныеЗаполнения);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.mega_ПриходнаяНакладная") И 
		ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		
		//ДокументОснование = ДанныеЗаполнения;	
		ЗаполнитьПоПриходнойНакладной(ДанныеЗаполнения);
	
	КонецЕсли;
	
	
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	&ВидДвиженияРасход КАК ВидДвижения,
	|	Состав.Ссылка.Дата КАК Период,
	|	Состав.Номенклатура КАК Номенклатура,
	|	Состав.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Состав.Количество КАК Количество,
	|	Состав.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаХранения,
	|	Состав.ВидСтадииОбработки КАК ВидСтадииОбработки,
	|	Состав.МестоХраненияОтправитель КАК МестоХранения,
	|	Состав.Ссылка.ПодразделениеОтправитель КАК Подразделение
	|ПОМЕСТИТЬ втРасход
	|ИЗ
	|	Документ.mega_ПеремещениеМеждуПодразделениями.Состав КАК Состав
	|ГДЕ
	|	Состав.Ссылка = &СсылкаНаОбъект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&ВидДвиженияПриход КАК ВидДвижения,
	|	Состав.Ссылка.Дата КАК Период,
	|	Состав.Номенклатура КАК Номенклатура,
	|	Состав.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Состав.Количество КАК Количество,
	|	Состав.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаХранения,
	|	Состав.ВидСтадииОбработки КАК ВидСтадииОбработки,
	|	Состав.МестоХраненияПолучатель КАК МестоХранения,
	|	Состав.Ссылка.ПодразделениеПолучатель КАК Подразделение
	|ПОМЕСТИТЬ втПриход
	|ИЗ
	|	Документ.mega_ПеремещениеМеждуПодразделениями.Состав КАК Состав
	|ГДЕ
	|	Состав.Ссылка = &СсылкаНаОбъект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.ВидДвижения,
	|	ВложенныйЗапрос.Период,
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.ЕдиницаИзмерения,
	|	ВложенныйЗапрос.Количество,
	|	ВложенныйЗапрос.ЕдиницаХранения,
	|	ВложенныйЗапрос.ВидСтадииОбработки,
	|	ВложенныйЗапрос.МестоХранения,
	|	ВложенныйЗапрос.Подразделение
	|ИЗ
	|	(ВЫБРАТЬ
	|		втПриход.ВидДвижения,
	|		втПриход.Период,
	|		втПриход.Номенклатура,
	|		втПриход.ЕдиницаИзмерения,
	|		втПриход.Количество,
	|		втПриход.ЕдиницаХранения,
	|		втПриход.ВидСтадииОбработки,
	|		втПриход.МестоХранения,
	|		втПриход.Подразделение
	|	ИЗ
	|		втПриход КАК втПриход
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		втРасход.ВидДвижения,
	|		втРасход.Период,
	|		втРасход.Номенклатура,
	|		втРасход.ЕдиницаИзмерения,
	|		втРасход.Количество,
	|		втРасход.ЕдиницаХранения,
	|		втРасход.ВидСтадииОбработки,
	|		втРасход.МестоХранения,
	|		втРасход.Подразделение
	|	ИЗ
	|		втРасход КАК втРасход) КАК ВложенныйЗапрос";
	
	Запрос.УстановитьПараметр("СсылкаНаОбъект", ЭтотОбъект.Ссылка);
	Запрос.УстановитьПараметр("ВидДвиженияРасход", ВидДвиженияНакопления.Расход);
	Запрос.УстановитьПараметр("ВидДвиженияПриход", ВидДвиженияНакопления.Приход);
	
	
	Результат = Запрос.Выполнить();
	
	ВыборкаСкладскиеЗапасы = Результат.Выбрать();
	РегистрыНакопления.mega_СкладскиеЗапасы.ВыполнитьДвижение(ЭтотОбъект.Ссылка, ВыборкаСкладскиеЗапасы);
	
	Результаты = ПолучитьВыборкиДанныхДляДвиженийПоЗаявкамНаПеремещение();
	ВыборкаСостав = Результаты[0].Выбрать();
	ВыборкаЗавкиНаПеремещение = Результаты[1].Выбрать();
	
	ВыполнитьДвиженияПоЗавкамНаПеремещение(ВыборкаСостав, ВыборкаЗавкиНаПеремещение);
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
		
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
		
	Ответственный    = Пользователи.ТекущийПользователь();
	Автор            = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
    
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПоЗаявкеНаПеремещение(ЗаявкаНаПеремещение) Экспорт
	
	ПодразделениеПолучатель = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЗаявкаНаПеремещение, "ПодразделениеЗаказчик");
	ПодразделениеОтправитель = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЗаявкаНаПеремещение, "ПодразделениеИсполнитель");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗаявкаНаПеремещениеСостав.НомерСтроки,
		|	ЗаявкаНаПеремещениеСостав.Номенклатура,
		|	ЗаявкаНаПеремещениеСостав.ЕдиницаИзмерения,
		|	ЗаявкаНаПеремещениеСостав.ВидСтадииОбработки,
		|	ЗаявкаНаПеремещениеСостав.Количество
		|ИЗ
		|	Документ.mega_ЗаявкаНаПеремещение.Состав КАК ЗаявкаНаПеремещениеСостав
		|ГДЕ
		|	ЗаявкаНаПеремещениеСостав.Ссылка = &ЗаявкаНаПеремещение";
	
	Запрос.УстановитьПараметр("ЗаявкаНаПеремещение", ЗаявкаНаПеремещение);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		НоваяСтрока = ЭтотОбъект.Состав.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДетальныеЗаписи);		
	КонецЦикла;	
КонецПроцедуры

Процедура ЗаполнитьПоПриходнойНакладной(ПриходнаяНакладная) Экспорт
		
	ПодразделениеОтправитель = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПриходнаяНакладная, "Подразделение");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ПриходнаяНакладнаяСостав.НомерСтроки,
		|	ПриходнаяНакладнаяСостав.Номенклатура,
		|	ПриходнаяНакладнаяСостав.ЕдиницаИзмерения,
		|	ПриходнаяНакладнаяСостав.ВидСтадииОбработки,
		|	ПриходнаяНакладнаяСостав.МестоХранения КАК МестоХраненияОтправитель,
		|	ПриходнаяНакладнаяСостав.Количество
		|ИЗ
		|	Документ.mega_ПриходнаяНакладная.Состав КАК ПриходнаяНакладнаяСостав
		|ГДЕ
		|	ПриходнаяНакладнаяСостав.Ссылка = &ПриходнаяНакладная";
	
	Запрос.УстановитьПараметр("ПриходнаяНакладная", ПриходнаяНакладная);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		НоваяСтрока = ЭтотОбъект.Состав.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДетальныеЗаписи);		
	КонецЦикла;	
КонецПроцедуры

Процедура ВыполнитьДвиженияПоЗавкамНаПеремещение(ВыборкаСостав, ВыборкаЗавкиНаПеремещение)
	Движения.mega_ЗавкиНаПеремещение.Записывать = Истина;
	
	Пока ВыборкаСостав.Следующий() Цикл
		
		КоличествоСписать = Справочники.mega_ЕдиницыИзмерения.ПеревестиИзЕдиницыВЕдиницу(
			ВыборкаСостав.Количество, ВыборкаСостав.ЕдиницаИзмерения, ВыборкаСостав.ЕдиницаХранения);						

		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Номенклатура", ВыборкаСостав.Номенклатура);
		СтруктураПоиска.Вставить("ВидСтадииОбработки", ВыборкаСостав.ВидСтадииОбработки);
		
		ВыборкаЗавкиНаПеремещение.Сбросить();		
		Пока ВыборкаЗавкиНаПеремещение.НайтиСледующий(СтруктураПоиска) И КоличествоСписать > 0 Цикл
			
			Количество = КоличествоСписать;								
			Если КоличествоСписать > ВыборкаЗавкиНаПеремещение.Количество Тогда
				
				Количество = ВыборкаЗавкиНаПеремещение.Количество;
				КоличествоСписать = КоличествоСписать - ВыборкаЗавкиНаПеремещение.Количество;
			Иначе
				  				
				 КоличествоСписать = 0;
			КонецЕсли;
			
			НоваяСтрока = Движения.mega_ЗавкиНаПеремещение.Добавить();
			НоваяСтрока.ВидДвижения = ВидДвиженияНакопления.Расход;
			НоваяСтрока.Период = ЭтотОбъект.Дата;
			НоваяСтрока.Регистратор = ЭтотОбъект.Ссылка;
			НоваяСтрока.ДокументПотребности = ВыборкаЗавкиНаПеремещение.ДокументПотребности;
			НоваяСтрока.Номенклатура = ВыборкаСостав.Номенклатура;
			НоваяСтрока.ВидСтадииОбработки = ВыборкаСостав.ВидСтадииОбработки;
			НоваяСтрока.Количество = Количество;				
		КонецЦикла;
	КонецЦикла;	
КонецПроцедуры

Функция ПолучитьВыборкиДанныхДляДвиженийПоЗаявкамНаПеремещение()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Состав.Номенклатура КАК Номенклатура,
	|	Состав.ВидСтадииОбработки КАК ВидСтадииОбработки,
	|	Состав.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СУММА(Состав.Количество) КАК Количество,
	|	Состав.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаХранения
	|ИЗ
	|	Документ.mega_ПеремещениеМеждуПодразделениями.Состав КАК Состав
	|ГДЕ
	|	Состав.Ссылка = &СсылкаНаОбъект
	|СГРУППИРОВАТЬ ПО
	|	Состав.Номенклатура,
	|	Состав.ВидСтадииОбработки,
	|	Состав.ЕдиницаИзмерения,
	|	Состав.Номенклатура.ЕдиницаИзмерения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗавкиНаПеремещение.Номенклатура КАК Номенклатура,
	|	ЗавкиНаПеремещение.ВидСтадииОбработки КАК ВидСтадииОбработки,
	|	ЗавкиНаПеремещение.ДокументПотребности КАК ДокументПотребности,
	|	ЗавкиНаПеремещение.КоличествоОстаток КАК Количество
	|ИЗ
	|	РегистрНакопления.mega_ЗавкиНаПеремещение.Остатки(&ДатаСреза, Номенклатура В
	|		(ВЫБРАТЬ
	|			mega_ПеремещениеМеждуПодразделениямиСостав.Номенклатура
	|		ИЗ
	|			Документ.mega_ПеремещениеМеждуПодразделениями.Состав КАК mega_ПеремещениеМеждуПодразделениямиСостав
	|		ГДЕ
	|			mega_ПеремещениеМеждуПодразделениямиСостав.Ссылка = &СсылкаНаОбъект)) КАК ЗавкиНаПеремещение
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗавкиНаПеремещение.ДокументПотребности.Дата
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("ДатаСреза", Новый Граница(МоментВремени(), ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("СсылкаНаОбъект", ЭтотОбъект.Ссылка);
	
	
	Результаты = Запрос.ВыполнитьПакет();
	Возврат Результаты;
КонецФункции

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли