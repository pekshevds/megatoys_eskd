///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2023, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКоманды = ОбщегоНазначения.ОбщийМодуль("ПодключаемыеКоманды");
		МодульПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды 		
	
	ЗаполнитьОстатки();		
КонецПроцедуры   

&НаКлиенте
Процедура ПриОткрытии(Отказ)  
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКомандыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиент");
		МодульПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	УстановитьТекущуюСпецификацию();
	ЗаполнитьДиаграммуГанта();
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКомандыКлиентСервер = ОбщегоНазначения.ОбщийМодуль("ПодключаемыеКомандыКлиентСервер");
		МодульПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКомандыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиент");
		МодульПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	КонецЕсли;
	
	ЗаполнитьОстатки();	
		
	УстановитьТекущуюСпецификацию();
	ЗаполнитьДиаграммуГанта();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТабличнойЧасти

&НаКлиенте
Процедура СоставНоменклатураПриИзменении(Элемент)
	ТекущиеДанные = Элементы.Состав.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда 
		
		ОсновныеПараметры = ПолучитьОсновныеПараметрыНоменклатуры(ТекущиеДанные.Номенклатура);
		ЗаполнитьЗначенияСвойств(ТекущиеДанные, ОсновныеПараметры);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СоставПриИзменении(Элемент)
	
	ЗаполнитьОстатки();
КонецПроцедуры

&НаКлиенте
Процедура СоставПриАктивизацииСтроки(Элемент)
	
	УстановитьТекущуюСпецификацию();
КонецПроцедуры

&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если ТекущаяСтраница = Элементы.СтраницаДиаграмма Тогда
	
		ЗаполнитьДиаграммуГанта();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьТекущуюСпецификацию()
	
	ТекущаяСпецификация = Неопределено;
	ТекущиеДанные = Элементы.Состав.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		
		ТекущаяСпецификация = ТекущиеДанные.Спецификация;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеДляПостроенияДиаграммыГанта()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ПроизводственныеРесурсы.Ресурс КАК Ресурс,
		|	ПроизводственныеРесурсы.Спецификация КАК Спецификация,
		|	НАЧАЛОПЕРИОДА(ПроизводственныеРесурсы.ДатаРесурса, ДЕНЬ) КАК Начало,
		|	КОНЕЦПЕРИОДА(ПроизводственныеРесурсы.ДатаРесурса, ДЕНЬ) КАК Окончание
		|ИЗ
		|	РегистрНакопления.mega_ПроизводственныеРесурсы КАК ПроизводственныеРесурсы
		|ГДЕ
		|	ПроизводственныеРесурсы.Регистратор = &Регистратор И ПроизводственныеРесурсы.Спецификация = &Спецификация
		|
		|УПОРЯДОЧИТЬ ПО
		|	Спецификация,
		|	Ресурс";
	
	Запрос.УстановитьПараметр("Регистратор", Объект.Ссылка);
	Запрос.УстановитьПараметр("Спецификация", ТекущаяСпецификация);
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();	
	Возврат ВыборкаДетальныеЗаписи;
КонецФункции

&НаСервере
Процедура ЗаполнитьДиаграммуГанта()
	
	ДиаграммаГанта.Обновление = Ложь;	
	ДиаграммаГанта.Очистить();
	
	Если НЕ Объект.Проведен Тогда
		
		Возврат;
	КонецЕсли;
		
	Выборка = ПолучитьДанныеДляПостроенияДиаграммыГанта();
	Пока Выборка.Следующий() Цикл
		
		Точка = ДиаграммаГанта.УстановитьТочку(Выборка.Ресурс);		
		Серия = ДиаграммаГанта.УстановитьСерию(Выборка.Спецификация);
	
		Значение = ДиаграммаГанта.ПолучитьЗначение(Точка, Серия);				
	
		Интервал = Значение.Добавить();
		Интервал.Текст = Строка(Выборка.Ресурс);		
		Интервал.Начало = Выборка.Начало;
		Интервал.Конец = Выборка.Окончание;		
	КонецЦикла;
	 
	
	ДиаграммаГанта.Обновление = Истина;
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьОстатки()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	СУММА(ВложенныйЗапрос.ВПроизводстве) КАК ВПроизводстве,
	|	СУММА(ВложенныйЗапрос.НаСкладе) КАК НаСкладе
	|ИЗ
	|	(ВЫБРАТЬ
	|		mega_ПроизводственныеЗапасыОстатки.Номенклатура КАК Номенклатура,
	|		mega_ПроизводственныеЗапасыОстатки.КоличествоОстаток КАК ВПроизводстве,
	|		0 КАК НаСкладе
	|	ИЗ
	|		РегистрНакопления.mega_ПроизводственныеЗапасы.Остатки(, Номенклатура В (&Номенклатура)) КАК mega_ПроизводственныеЗапасыОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		mega_СкладскиеЗапасыОстатки.Номенклатура,
	|		0,
	|		mega_СкладскиеЗапасыОстатки.КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.mega_СкладскиеЗапасы.Остатки(, Номенклатура В (&Номенклатура)) КАК mega_СкладскиеЗапасыОстатки) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Номенклатура";
	
	Запрос.УстановитьПараметр("Номенклатура", Объект.Состав.Выгрузить().ВыгрузитьКолонку("Номенклатура"));
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Для Каждого ТекСтрока Из Объект.Состав Цикл 
		Выборка.Сбросить();		
		
		СтруктураПоиска = Новый Структура;	
		СтруктураПоиска.Вставить("Номенклатура", ТекСтрока.Номенклатура);
		
		Если Выборка.НайтиСледующий(СтруктураПоиска) Тогда 
			
			ТекСтрока.ВПроизводстве = Выборка.ВПроизводстве;
			ТекСтрока.НаСкладе = Выборка.НаСкладе;
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Функция ПолучитьОсновныеПараметрыНоменклатуры(Номенклатура)
	
	Возврат Справочники.mega_Номенклатура.ПолучитьОсновныеПараметры(Номенклатура);
КонецФункции

// Управляет доступностью элементов формы.
&НаКлиенте
Процедура УправлениеДоступностью()
	

КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	МодульПодключаемыеКомандыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиент");
	МодульПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	МодульПодключаемыеКоманды = ОбщегоНазначения.ОбщийМодуль("ПодключаемыеКоманды");
	МодульПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	МодульПодключаемыеКомандыКлиентСервер = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиентСервер");
	МодульПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти 

