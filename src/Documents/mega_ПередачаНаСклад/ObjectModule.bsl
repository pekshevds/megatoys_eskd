///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2023, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура ЗаполнитьПоОстаткам() Экспорт
	
	Если ЭтоНовый() И 
		(НачалоДня(Дата) = НачалоДня(ТекущаяДатаСеанса())) Тогда
			
		ДатаСреза = КонецДня(Дата);
	Иначе
		
		ДатаСреза = Новый Граница(МоментВремени(), ВидГраницы.Исключая);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Остатки.Номенклатура,
		|	Остатки.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	Остатки.ВидСтадииОбработки КАК ВидСтадииОбработки,
		|	Остатки.КоличествоОстаток КАК Количество
		|ИЗ
		|	РегистрНакопления.mega_ПроизводственныеЗапасы.Остатки(&ДатаСреза, Подразделение = &Подразделение) КАК Остатки";
	
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("ДатаСреза", ДатаСреза);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		НоваяСтрока = Состав.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДетальныеЗаписи);
	КонецЦикла;	
КонецПроцедуры

#Область ДляВызоваИзДругихПодсистем

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
    	
	Ответственный    = Пользователи.ТекущийПользователь();
	Автор            = Пользователи.ТекущийПользователь();
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Состав.НомерСтроки КАК НомерСтроки,
	|	&ВидДвиженияРасход КАК ВидДвижения,
	|	Состав.Ссылка.Дата КАК Период,
	|	Состав.Номенклатура КАК Номенклатура,
	|	Состав.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Состав.Количество КАК Количество,
	|	Состав.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаХранения,
	|	Состав.ВидСтадииОбработки КАК ВидСтадииОбработки,
	|	Состав.МестоХранения КАК МестоХранения,
	|	Состав.Ссылка.Подразделение КАК Подразделение
	|ИЗ
	|	Документ.mega_ПередачаНаСклад.Состав КАК Состав
	|ГДЕ
	|	Состав.Ссылка = &СсылкаНаОбъект
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Состав.НомерСтроки КАК НомерСтроки,
	|	&ВидДвиженияПриход КАК ВидДвижения,
	|	Состав.Ссылка.Дата КАК Период,
	|	Состав.Номенклатура КАК Номенклатура,
	|	Состав.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Состав.Количество КАК Количество,
	|	Состав.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаХранения,
	|	Состав.ВидСтадииОбработки КАК ВидСтадииОбработки,
	|	Состав.МестоХранения КАК МестоХранения,
	|	Состав.Ссылка.Подразделение КАК Подразделение
	|ИЗ
	|	Документ.mega_ПередачаНаСклад.Состав КАК Состав
	|ГДЕ
	|	Состав.Ссылка = &СсылкаНаОбъект
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.УстановитьПараметр("СсылкаНаОбъект", ЭтотОбъект.Ссылка);
	Запрос.УстановитьПараметр("ВидДвиженияРасход", ВидДвиженияНакопления.Расход);
	Запрос.УстановитьПараметр("ВидДвиженияПриход", ВидДвиженияНакопления.Приход);
	
	
	Результаты = Запрос.ВыполнитьПакет();
	ВыборкаПроизводственныеЗапасы = Результаты[0].Выбрать();
	ВыборкаСкладскиеЗапасы = Результаты[1].Выбрать();
	
	РегистрыНакопления.mega_ПроизводственныеЗапасы.ВыполнитьДвижение(ЭтотОбъект.Ссылка, ВыборкаПроизводственныеЗапасы);
	РегистрыНакопления.mega_СкладскиеЗапасы.ВыполнитьДвижение(ЭтотОбъект.Ссылка, ВыборкаСкладскиеЗапасы);	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
		
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
		
	Ответственный    = Пользователи.ТекущийПользователь();
	Автор            = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
    
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли