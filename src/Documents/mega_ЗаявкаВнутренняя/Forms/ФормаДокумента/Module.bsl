///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2023, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКоманды = ОбщегоНазначения.ОбщийМодуль("ПодключаемыеКоманды");
		МодульПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды 		
КонецПроцедуры   

&НаКлиенте
Процедура ПриОткрытии(Отказ)  
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКомандыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиент");
		МодульПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ЗаполнитьОстаткиНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКомандыКлиентСервер = ОбщегоНазначения.ОбщийМодуль("ПодключаемыеКомандыКлиентСервер");
		МодульПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКомандыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиент");
		МодульПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	КонецЕсли;
	
	ЗаполнитьОстаткиНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Документ.mega_ЗаявкаВнутренняя.Форма.ФормаВыбораСпецификации" Тогда
	
		ОбработатьВыборСпецификацииНаСервере(ВыбранноеЗначение);
		ЗаполнитьОстаткиНаСервере();		
		Модифицированность = Истина;
	ИначеЕсли ИсточникВыбора.ИмяФормы = "Документ.mega_ПланПроизводства.ФормаВыбора" Тогда
		
		ОбработатьВыборПланаПроизводстваНаСервере(ВыбранноеЗначение);
		ЗаполнитьОстаткиНаСервере();		
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	
	ЗаполнитьОстаткиНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСостав

&НаКлиенте
Процедура СоставПриИзменении(Элемент)
	
	ЗаполнитьОстаткиНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СоставНоменклатураПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Состав	.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		
		Структура = Новый Структура(
		"Номенклатура,
		|ЕдиницаИзмерения,
		|Количество");
		ЗаполнитьЗначенияСвойств(Структура, ТекущиеДанные);		
		ПриИзмененииНоменклатурыНаСервере(Структура);		
		ЗаполнитьЗначенияСвойств(ТекущиеДанные, Структура);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьМатериалыСпецификации(Команда)
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ЗакрыватьПриВыборе", Ложь);
	ПараметрыОткрытия.Вставить("РежимВыбора", Истина);
	ОткрытьФорму("Документ.mega_ЗаявкаВнутренняя.Форма.ФормаВыбораСпецификации", 
		ПараметрыОткрытия, ЭтотОбъект,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоПлануПроизводства(Команда)
	
	Если Объект.Состав.Количество() = 0 Тогда
		
		ОткрытьФормуВыбораДокументаПланПроизводства();
	Иначе
		Режим = РежимДиалогаВопрос.ДаНет;
		
		ОписаниеОповещенияОЗавершении = 
			Новый ОписаниеОповещения("ПослеЗакрытияВопросаООчисткеТаблицыСостав", ЭтотОбъект);	
		
		ПоказатьВопрос(ОписаниеОповещенияОЗавершении, 
			НСтр("ru = 'Перед заполнением табличная часть будет очищена. Продолжить?';"), Режим, 0);		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОткрытьФормуВыбораДокументаПланПроизводства()
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ЗакрыватьПриВыборе", Истина);
	ПараметрыОткрытия.Вставить("РежимВыбора", Истина);
	ОткрытьФорму("Документ.mega_ПланПроизводства.ФормаВыбора", 
		ПараметрыОткрытия, ЭтотОбъект,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры
	
&НаКлиенте
Процедура ПослеЗакрытияВопросаООчисткеТаблицыСостав(Результат, Параметры) Экспорт
    
    Если Результат = КодВозвратаДиалога.Нет Тогда
        Возврат;
    КонецЕсли;
	
	Объект.Состав.Очистить();
		
	ОткрытьФормуВыбораДокументаПланПроизводства();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОстаткиНаСервере()
	
	ДатаСреза = Объект.Дата;
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ДатаСреза = КонецДня(ДатаСреза);
	КонецЕсли;	
	Номенклатура = Объект.Состав.Выгрузить().ВыгрузитьКолонку("Номенклатура");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	СкладскиеЗапасыОстатки.Номенклатура,
		|	СкладскиеЗапасыОстатки.КоличествоОстаток КАК Остаток
		|ПОМЕСТИТЬ втОстаткиЗаказчика
		|ИЗ
		|	РегистрНакопления.mega_СкладскиеЗапасы.Остатки(&ДатаСреза, Номенклатура В (&Номенклатура)
		|	И Подразделение = &Подразделение) КАК СкладскиеЗапасыОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СкладскиеЗапасыОстатки.Номенклатура,
		|	СкладскиеЗапасыОстатки.КоличествоОстаток КАК Остаток
		|ПОМЕСТИТЬ втОстаткиДругие
		|ИЗ
		|	РегистрНакопления.mega_СкладскиеЗапасы.Остатки(&ДатаСреза, Номенклатура В (&Номенклатура)
		|	И Подразделение <> &Подразделение) КАК СкладскиеЗапасыОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Номенклатура,
		|	СУММА(ВложенныйЗапрос.УЗаказчика) КАК УЗаказчика,
		|	СУММА(ВложенныйЗапрос.УДругих) КАК УДругих
		|ИЗ
		|	(ВЫБРАТЬ
		|		втОстаткиЗаказчика.Номенклатура,
		|		втОстаткиЗаказчика.Остаток КАК УЗаказчика,
		|		0 КАК УДругих
		|	ИЗ
		|		втОстаткиЗаказчика КАК втОстаткиЗаказчика
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		втОстаткиДругие.Номенклатура КАК Поле1,
		|		0 КАК Поле3,
		|		втОстаткиДругие.Остаток КАК Поле2
		|	ИЗ
		|		втОстаткиДругие КАК втОстаткиДругие) КАК ВложенныйЗапрос
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Номенклатура";
	
	Запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("ДатаСреза", ДатаСреза);
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Для Каждого ТекСтрокаСостав Из Объект.Состав Цикл
		
		Структура = Новый Структура;
		Структура.Вставить("Номенклатура", ТекСтрокаСостав.Номенклатура);
		
		ТекСтрокаСостав.Остаток = 0;ТекСтрокаСостав.ОстатокЗаказчика = 0;
		Если ВыборкаДетальныеЗаписи.НайтиСледующий(Структура) Тогда
			
			ТекСтрокаСостав.ОстатокЗаказчика = ВыборкаДетальныеЗаписи.УЗаказчика;
			ТекСтрокаСостав.Остаток = ВыборкаДетальныеЗаписи.УДругих;
		КонецЕсли;
	КонецЦикла;
			
КонецПроцедуры

&НаСервере
Процедура ОбработатьВыборСпецификацииНаСервере(ВыбранноеЗначение)
	МатериалыСпецификации = Справочники.mega_Спецификации.ПолучитьМатериалыСпецификации(
		ВыбранноеЗначение.Спецификация, ВыбранноеЗначение.Количество);
		
	Пока МатериалыСпецификации.Следующий() Цикл
		
		ДобавитьНовуюСтрокуВСостав(
			МатериалыСпецификации.Номенклатура, МатериалыСпецификации.ЕдиницаИзмерения, МатериалыСпецификации.Количество);					
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Процедура ОбработатьВыборПланаПроизводстваНаСервере(ПланПроизводства)
	
	Для Каждого ТекСтрокаСостав Из ПланПроизводства.Состав Цикл
		
		МатериалыСпецификации = Справочники.mega_Спецификации.ПолучитьМатериалыСпецификации(
			ТекСтрокаСостав.Спецификация, ТекСтрокаСостав.Количество);
			
		Пока МатериалыСпецификации.Следующий() Цикл
			
			ДобавитьНовуюСтрокуВСостав(
				МатериалыСпецификации.Номенклатура, МатериалыСпецификации.ЕдиницаИзмерения, МатериалыСпецификации.Количество);					
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ДобавитьНовуюСтрокуВСостав(Номенклатура, ЕдиницаИзмерения, Количество)
	
	ПараметрыПоиска = Новый Структура;
	ПараметрыПоиска.Вставить("Номенклатура", Номенклатура);
	ПараметрыПоиска.Вставить("ЕдиницаИзмерения", ЕдиницаИзмерения);
	
	Строки = Объект.Состав.НайтиСтроки(ПараметрыПоиска);
	Если Строки.Количество() > 0 Тогда
		
		ТекущаяСтрокаСостав = Строки[0];
	Иначе
		
		ТекущаяСтрокаСостав = Объект.Состав.Добавить();
		ТекущаяСтрокаСостав.Номенклатура = Номенклатура;
		ТекущаяСтрокаСостав.ЕдиницаИзмерения = ЕдиницаИзмерения;
	КонецЕсли;
	
	ТекущаяСтрокаСостав.Количество = ТекущаяСтрокаСостав.Количество + Количество;	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПриИзмененииНоменклатурыНаСервере(Структура)
	
	Структура.ЕдиницаИзмерения = Справочники.mega_ЕдиницыИзмерения.ПустаяСсылка();	
				
	Если ЗначениеЗаполнено(Структура.Номенклатура) Тогда
		
		Структура.ЕдиницаИзмерения = 
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Структура.Номенклатура, "ЕдиницаИзмерения");
	КонецЕсли;	
КонецПроцедуры

// Управляет доступностью элементов формы.
&НаКлиенте
Процедура УправлениеДоступностью()
	

КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	МодульПодключаемыеКомандыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиент");
	МодульПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	МодульПодключаемыеКоманды = ОбщегоНазначения.ОбщийМодуль("ПодключаемыеКоманды");
	МодульПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	МодульПодключаемыеКомандыКлиентСервер = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиентСервер");
	МодульПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

