///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2023, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКоманды = ОбщегоНазначения.ОбщийМодуль("ПодключаемыеКоманды");
		МодульПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ЗаполнитьОстаткиСоставНаСервере();
	
	ЗаполнитьОстаткиВидыСтадийОбработкиНаСервере();
		
	ЗаполнитьОстаткиМатериалыНаСервере();
	
	ЗаполнитьОстаткиРесурсовНаСервере(); 		
КонецПроцедуры   

&НаКлиенте
Процедура ПриОткрытии(Отказ)  
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКомандыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиент");
		МодульПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКомандыКлиентСервер = ОбщегоНазначения.ОбщийМодуль("ПодключаемыеКомандыКлиентСервер");
		МодульПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКомандыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиент");
		МодульПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ЗаполнитьОстаткиСоставНаСервере();
	
	ЗаполнитьОстаткиВидыСтадийОбработкиНаСервере();
		
	ЗаполнитьОстаткиМатериалыНаСервере();
	
	ЗаполнитьОстаткиРесурсовНаСервере();
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура РассчитатьИЗаполнитьМатериалыИРесурсы(Команда)
	
	РассчитатьИЗаполнитьМатериалыИРесурсыНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиМатериалыВСостав(Команда)
	
	ТекущиеДанные = Элементы.Материалы.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		
		Возврат;
	КонецЕсли;
	
	Структура = Новый Структура(
		"Номенклатура,
		|Спецификация,
		|ЕдиницаИзмерения,
		|ВидСтадииОбработки,
		|Количество,
		|Доступно");
	ЗаполнитьЗначенияСвойств(Структура, ТекущиеДанные);
	
	Если Структура.Количество > Структура.Доступно Тогда
	
		Структура.Количество = Структура.Количество - Структура.Доступно;  
		ПеренестиМатериалыВСоставНаСервере(Структура);	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиМатериалыВНовыйДокумент(Команда)
	
	ТаблицаДляПереносаВДругойДокумент.Очистить();
	ВыделенныеСтроки = Элементы.Материалы.ВыделенныеСтроки;
	Для Каждого ВыделеннаяСтрока Из ВыделенныеСтроки Цикл
		
		ДанныеСтроки = Элементы.Материалы.ДанныеСтроки(ВыделеннаяСтрока);
		Если ДанныеСтроки.Доступно > ДанныеСтроки.Количество Тогда
			
			Продолжить;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ДанныеСтроки.ВидСтадииОбработки) ИЛИ 
			НЕ ЗначениеЗаполнено(ДанныеСтроки.Спецификация) Тогда
			
			Возврат;
		КонецЕсли;
				
		НоваяСтрока = ТаблицаДляПереносаВДругойДокумент.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеСтроки);
		НоваяСтрока.Количество = ДанныеСтроки.Количество - ДанныеСтроки.Доступно;
	КонецЦикла;
	
	ПеренестиМатериалыВНовыйДокументНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВидыСтадийОбработкиВСостав(Команда)
	
	ТекущиеДанные = Элементы.ВидыСтадийОбработки.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		
		Возврат;
	КонецЕсли;
	
	Структура = Новый Структура(
		"Номенклатура,
		|Спецификация,
		|ЕдиницаИзмерения,
		|ВидСтадииОбработки,
		|Количество,
		|Доступно");
	ЗаполнитьЗначенияСвойств(Структура, ТекущиеДанные);
	
	Если Структура.Количество > Структура.Доступно Тогда
	
		Структура.Количество = Структура.Количество - Структура.Доступно;  
		ПеренестиВидыСтадийОбработкиВСоставНаСервере(Структура);	
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура РаспределитьПоСменнымЗаданиям(Команда)
	
	Если Модифицированность Тогда
		ПоказатьПредупреждение(, "Документ не записан. Операция не возможна", 5, "Внимание");
		Возврат;
	КонецЕсли;
	
	ПроизводственныеРесурсы = ПолучитьПроизводственныеРесурсыНаСервере();
	Для Каждого ПроизводственныйРесурс Из ПроизводственныеРесурсы Цикл
		
		Форма = ПолучитьФорму("Документ.mega_СменноеЗадание.ФормаОбъекта",,, Истина);
		СменноеЗадание = Форма.Объект;
		
		ЗаполнитьСменноеЗаданиеНаСервере(СменноеЗадание, ПроизводственныйРесурс);
		
		КопироватьДанныеФормы(СменноеЗадание, Форма.Объект);
		Форма.Открыть();
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСостав

&НаКлиенте
Процедура СоставНоменклатураПриИзменении(Элемент)
	
	СоставНоменклатураПриИзмененииНаКлиенте()
КонецПроцедуры

&НаКлиенте
Процедура СоставСпецификацияПриИзменении(Элемент)

	СоставСпецификацияПриИзмененииНаКлиенте()
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьСменноеЗаданиеНаСервере(СменноеЗадание, ПроизводственныйРесурс)
	
	СменноеЗадание.ПроизводственныйРесурс = ПроизводственныйРесурс;
	СменноеЗадание.ДатаСмены = Объект.ДатаСмены;
	СменноеЗадание.СменныйПланПроизводства = Объект.Ссылка;
	
	Для Каждого ТекСтрока Из Объект.ВидыСтадийОбработки Цикл
		
		Если ЗначениеЗаполнено(ТекСтрока.ВидСтадииОбработки) И 
			ЗначениеЗаполнено(ТекСтрока.Спецификация) И 
			ТекСтрока.Количество > ТекСтрока.Доступно Тогда
			
			Количество = ТекСтрока.Количество - ТекСтрока.Доступно;
				
			ДоступныеТехнологическиеОперации = 
				Справочники.mega_Спецификации.ПолучитьТехнологическиеОперацииСпецификацииПоВидуСтадииОбработки(
					ТекСтрока.Спецификация, ТекСтрока.ВидСтадииОбработки, Количество);
			
			Пока ДоступныеТехнологическиеОперации.Следующий() Цикл
				
				Если ПроизводственныйРесурс <> 
					ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
						ДоступныеТехнологическиеОперации.Номенклатура, "ПроизводственныйРесурс") Тогда
					Продолжить;
				КонецЕсли;
				
				НоваяСтрока = СменноеЗадание.ТехнологическиеОперации.Добавить();
				НоваяСтрока.Номенклатура = ТекСтрока.Номенклатура;
				НоваяСтрока.Спецификация = ТекСтрока.Спецификация;
				НоваяСтрока.ЕдиницаИзмерения = ТекСтрока.ЕдиницаИзмерения;
				НоваяСтрока.Количество = Количество;
				НоваяСтрока.ВидСтадииОбработки = ТекСтрока.ВидСтадииОбработки;
				
				НоваяСтрока.ТехнологическаяОперация = ДоступныеТехнологическиеОперации.Номенклатура;
				НоваяСтрока.ТехнологическаяОперацияКоличество = ДоступныеТехнологическиеОперации.Количество;
				НоваяСтрока.ТехнологическаяОперацияЕдиницаИзмерения = 
					ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НоваяСтрока.ТехнологическаяОперация, "ЕдиницаИзмерения");
			КонецЦикла;	
		КонецЕсли;		
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Функция ПолучитьПроизводственныеРесурсыНаСервере()
	ВременнаяТаблица = Объект.ОстаткиРесурсов.Выгрузить();
	ВременнаяТаблица.Свернуть("Ресурс");
	
	Возврат ВременнаяТаблица.ВыгрузитьКолонку("Ресурс");
КонецФункции

&НаКлиенте
Процедура ПеренестиМатериалыВНовыйДокументНаКлиенте()
	
	Форма = ПолучитьФорму("Документ.mega_СменныйПланПроизводства.ФормаОбъекта",,, Истина);
	СменныйПланПроизводства = Форма.Объект;
	
	ЗаполнитьСменныйПланПроизводстваНаСервере(СменныйПланПроизводства);
	
	КопироватьДанныеФормы(СменныйПланПроизводства, Форма.Объект);
	Форма.Открыть();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСменныйПланПроизводстваНаСервере(СменныйПланПроизводства)
	
	СменныйПланПроизводства.ДатаСмены = Объект.ДатаСмены;
	
	Для Каждого ТекСтрокаСостав Из ТаблицаДляПереносаВДругойДокумент Цикл
		
		НоваяСтрока = СменныйПланПроизводства.Состав.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрокаСостав);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПеренестиМатериалыВСоставНаСервере(ДанныеДляПереноса)
	
	Если НЕ ЗначениеЗаполнено(ДанныеДляПереноса.ВидСтадииОбработки) ИЛИ 
		НЕ ЗначениеЗаполнено(ДанныеДляПереноса.Спецификация) Тогда
		
		Возврат;
	КонецЕсли;
	
	Отбор = Новый Структура;
	Отбор.Вставить("Номенклатура", ДанныеДляПереноса.Номенклатура);
	Отбор.Вставить("ВидСтадииОбработки", ДанныеДляПереноса.ВидСтадииОбработки);
	
	Строки = Объект.Состав.НайтиСтроки(Отбор);
	Если Строки.Количество() > 0 Тогда
		
		ТекущаяСтрокаСостав = Строки[0];
	Иначе
		
		ТекущаяСтрокаСостав = Объект.Состав.Добавить();
		ЗаполнитьЗначенияСвойств(ТекущаяСтрокаСостав, ДанныеДляПереноса);
		ТекущаяСтрокаСостав.Количество = 0;
	КонецЕсли;
	
	ТекущаяСтрокаСостав.Количество = ТекущаяСтрокаСостав.Количество + ДанныеДляПереноса.Количество;
КонецПроцедуры

&НаСервере
Процедура ПеренестиВидыСтадийОбработкиВСоставНаСервере(ДанныеДляПереноса)

	Если НЕ ЗначениеЗаполнено(ДанныеДляПереноса.ВидСтадииОбработки) ИЛИ 
		НЕ ЗначениеЗаполнено(ДанныеДляПереноса.Спецификация) Тогда
		
		Возврат;
	КонецЕсли;
	
	Отбор = Новый Структура;
	Отбор.Вставить("Номенклатура", ДанныеДляПереноса.Номенклатура);
	Отбор.Вставить("ВидСтадииОбработки", ДанныеДляПереноса.ВидСтадииОбработки);
	
	Строки = Объект.Состав.НайтиСтроки(Отбор);
	Если Строки.Количество() > 0 Тогда
		
		ТекущаяСтрокаСостав = Строки[0];
	Иначе
		
		ТекущаяСтрокаСостав = Объект.Состав.Добавить();
		ЗаполнитьЗначенияСвойств(ТекущаяСтрокаСостав, ДанныеДляПереноса);
		ТекущаяСтрокаСостав.Количество = 0;
	КонецЕсли;
	
	ТекущаяСтрокаСостав.Количество = ТекущаяСтрокаСостав.Количество + ДанныеДляПереноса.Количество;
КонецПроцедуры

&НаСервере
Процедура ИнициализацияТаблицМатериаловИПолуфабрикатовИВидовСтадийОбработки()
	ТаблицаМатериаловИПолуфабрикатов.Очистить();
	ТаблицаВидовСтадийОбработки.Очистить();
	ТаблицаРесурсов.Очистить();
	ТаблицаОстаткиРесурсов.Очистить();
	
	Для Каждого ТекСтрокаСостав Из Объект.Состав Цикл
		Если НЕ ЗначениеЗаполнено(ТекСтрокаСостав.Спецификация) Тогда
			Продолжить;
		КонецЕсли;
		
		ВыборкаМатериалы = Справочники.mega_Спецификации.ПолучитьМатериалыСпецификации(
			ТекСтрокаСостав.Спецификация, ТекСтрокаСостав.Количество);
		Пока ВыборкаМатериалы.Следующий() Цикл
			НоваяСтрока = ТаблицаМатериаловИПолуфабрикатов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаМатериалы);
			НоваяСтрока.ВидСтадииОбработки = ВыборкаМатериалы.СтадияОбработки;
		КонецЦикла;
		
		НоваяСтрока = ТаблицаВидовСтадийОбработки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрокаСостав); 
		
		ПредыдущиеСтадииОбработки = Справочники.mega_Спецификации.ПолучитьПредыдущиеСтадииОбработки(
			ТекСтрокаСостав.Спецификация, ТекСтрокаСостав.ВидСтадииОбработки);
		Для Каждого ПредыдущаяСтадияОбработки Из ПредыдущиеСтадииОбработки Цикл
			НоваяСтрока = ТаблицаВидовСтадийОбработки.Добавить();
			НоваяСтрока.Номенклатура = ТекСтрокаСостав.Номенклатура;
			НоваяСтрока.ЕдиницаИзмерения = ТекСтрокаСостав.ЕдиницаИзмерения;
			НоваяСтрока.Спецификация = ТекСтрокаСостав.Спецификация;
			НоваяСтрока.ВидСтадииОбработки = ПредыдущаяСтадияОбработки.ВидСтадииОбработки;
			НоваяСтрока.Количество = ТекСтрокаСостав.Количество;
		КонецЦикла;
		
		РесурсыСпецификации = Справочники.mega_Спецификации.ПолучитьРесурсыСпецификации(
			ТекСтрокаСостав.Спецификация, ТекСтрокаСостав.Количество);
		Пока РесурсыСпецификации.Следующий() Цикл
			НоваяСтрока = ТаблицаРесурсов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, РесурсыСпецификации);
			НоваяСтрока.Ресурс = РесурсыСпецификации.ПроизводственныйРесурс;
		КонецЦикла;
	КонецЦикла;
		
	ВременнаяТаблица = ТаблицаМатериаловИПолуфабрикатов.Выгрузить();
	ВременнаяТаблица.Свернуть("Номенклатура,Спецификация,ВидСтадииОбработки,ЕдиницаИзмерения", "Количество");
	ТаблицаМатериаловИПолуфабрикатов.Загрузить(ВременнаяТаблица);
	
	ВременнаяТаблица = ТаблицаВидовСтадийОбработки.Выгрузить();
	ВременнаяТаблица.Свернуть("Номенклатура,Спецификация,ВидСтадииОбработки,ЕдиницаИзмерения", "Количество");
	ТаблицаВидовСтадийОбработки.Загрузить(ВременнаяТаблица);
	
	ВременнаяТаблица = ТаблицаРесурсов.Выгрузить();
	ВременнаяТаблица.Свернуть("Номенклатура,Ресурс,ЕдиницаИзмерения", "Количество");
	ТаблицаРесурсов.Загрузить(ВременнаяТаблица);
	
	ВременнаяТаблица = ТаблицаРесурсов.Выгрузить();
	ВременнаяТаблица.Свернуть("Ресурс", "Количество");
	ТаблицаОстаткиРесурсов.Загрузить(ВременнаяТаблица); 
КонецПроцедуры

&НаСервере
Процедура РассчитатьИЗаполнитьМатериалыИРесурсыНаСервере()
	
	ЗаполнитьОстаткиСоставНаСервере();
	
	ИнициализацияТаблицМатериаловИПолуфабрикатовИВидовСтадийОбработки();
	
	Объект.ВидыСтадийОбработки.Загрузить(ТаблицаВидовСтадийОбработки.Выгрузить());
	ЗаполнитьОстаткиВидыСтадийОбработкиНаСервере();
		
	Объект.Материалы.Загрузить(ТаблицаМатериаловИПолуфабрикатов.Выгрузить());
	ЗаполнитьОстаткиМатериалыНаСервере();
	
	Объект.Ресурсы.Загрузить(ТаблицаРесурсов.Выгрузить());
	
	Объект.ОстаткиРесурсов.Загрузить(ТаблицаОстаткиРесурсов.Выгрузить());
	ЗаполнитьОстаткиРесурсовНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СоставНоменклатураПриИзмененииНаКлиенте()
	
	ТекущиеДанные = Элементы.Состав.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		
		Возврат;
	КонецЕсли;
	
	Структура = Новый Структура(
		"Номенклатура,
		|Спецификация,
		|ЕдиницаИзмерения,
		|ВидСтадииОбработки,
		|Количество");
	ЗаполнитьЗначенияСвойств(Структура, ТекущиеДанные);
	СоставНоменклатураПриИзмененииНаСервере(Структура);
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, Структура);
	
КонецПроцедуры

&НаКлиенте
Процедура СоставСпецификацияПриИзмененииНаКлиенте()
	
	ТекущиеДанные = Элементы.Состав.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		
		Возврат;
	КонецЕсли;
	
	Структура = Новый Структура(
		"Спецификация,
		|ВидСтадииОбработки");
	ЗаполнитьЗначенияСвойств(Структура, ТекущиеДанные);
	СоставСпецификацияПриИзмененииНаСервере(Структура);
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, Структура);
	
КонецПроцедуры

&НаСервере
Процедура СоставНоменклатураПриИзмененииНаСервере(Структура)
	
	Структура.ЕдиницаИзмерения = Справочники.mega_ЕдиницыИзмерения.ПустаяСсылка();
	Структура.Спецификация = Справочники.mega_Спецификации.ПустаяСсылка();
	Структура.ВидСтадииОбработки = Справочники.mega_ВидыСтадийОбработки.ПустаяСсылка();
	Структура.Количество = 0;
	
	Если ЗначениеЗаполнено(Структура.Номенклатура) Тогда
		
		Структура.ЕдиницаИзмерения = 
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Структура.Номенклатура, "ЕдиницаИзмерения");		
		Структура.Спецификация = Справочники.mega_Спецификации.ПолучитьОсновнуюСпецификациюНоменклатуры(Структура.Номенклатура);
		Если ЗначениеЗаполнено(Структура.Спецификация) Тогда
			ПоследняяСтадияОбработки = Справочники.mega_Спецификации.ПолучитьПоследнююСтадиюОбработки(Структура.Спецификация);
			Структура.ВидСтадииОбработки = ПоследняяСтадияОбработки.ВидСтадииОбработки; 
		КонецЕсли;
		
		Структура.Количество = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Структура.Спецификация, "Количество");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СоставСпецификацияПриИзмененииНаСервере(Структура)
	
	Структура.ВидСтадииОбработки = Справочники.mega_ВидыСтадийОбработки.ПустаяСсылка();
	Если ЗначениеЗаполнено(Структура.Номенклатура) Тогда
		
		ПоследняяСтадияОбработки = Справочники.mega_Спецификации.ПолучитьПоследнююСтадиюОбработки(Структура.Спецификация);
		Структура.ВидСтадииОбработки = ПоследняяСтадияОбработки.ВидСтадииОбработки;		
	КонецЕсли;
КонецПроцедуры


&НаСервере
Функция ОстаткиСоставНаСервере()
	
	ТаблицаЗначений = Объект.Состав.Выгрузить();
	ТаблицаЗначений.Свернуть("Номенклатура,ВидСтадииОбработки");
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаЗначений.Номенклатура,
		|	ТаблицаЗначений.ВидСтадииОбработки
		|ПОМЕСТИТЬ втТаблицаЗначений
		|ИЗ
		|	&ТаблицаЗначений КАК ТаблицаЗначений
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втТаблицаЗначений.Номенклатура,
		|	втТаблицаЗначений.ВидСтадииОбработки,
		|	mega_СкладскиеЗапасыОстатки.КоличествоОстаток КАК НаСкладе,
		|	mega_ПроизводственныеЗапасыОстатки.КоличествоОстаток КАК ВПроизводстве
		|ИЗ
		|	втТаблицаЗначений КАК втТаблицаЗначений
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.mega_СкладскиеЗапасы.Остатки КАК mega_СкладскиеЗапасыОстатки
		|		ПО втТаблицаЗначений.Номенклатура = mega_СкладскиеЗапасыОстатки.Номенклатура
		|		И втТаблицаЗначений.ВидСтадииОбработки = mega_СкладскиеЗапасыОстатки.ВидСтадииОбработки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.mega_ПроизводственныеЗапасы.Остатки КАК mega_ПроизводственныеЗапасыОстатки
		|		ПО втТаблицаЗначений.Номенклатура = mega_ПроизводственныеЗапасыОстатки.Номенклатура
		|		И втТаблицаЗначений.ВидСтадииОбработки = mega_ПроизводственныеЗапасыОстатки.ВидСтадииОбработки";
	
	Запрос.УстановитьПараметр("ТаблицаЗначений", ТаблицаЗначений);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Возврат ВыборкаДетальныеЗаписи;
КонецФункции

&НаСервере
Функция ОстаткиВидыСтадийОбработкиНаСервере()
	
	ТаблицаЗначений = Объект.ВидыСтадийОбработки.Выгрузить();
	ТаблицаЗначений.Свернуть("Номенклатура,ВидСтадииОбработки");
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаЗначений.Номенклатура,
		|	ТаблицаЗначений.ВидСтадииОбработки
		|ПОМЕСТИТЬ втТаблицаЗначений
		|ИЗ
		|	&ТаблицаЗначений КАК ТаблицаЗначений
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втТаблицаЗначений.Номенклатура,
		|	втТаблицаЗначений.ВидСтадииОбработки,
		|	mega_СкладскиеЗапасыОстатки.КоличествоОстаток КАК НаСкладе,
		|	mega_ПроизводственныеЗапасыОстатки.КоличествоОстаток КАК ВПроизводстве
		|ИЗ
		|	втТаблицаЗначений КАК втТаблицаЗначений
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.mega_СкладскиеЗапасы.Остатки КАК mega_СкладскиеЗапасыОстатки
		|		ПО втТаблицаЗначений.Номенклатура = mega_СкладскиеЗапасыОстатки.Номенклатура
		|		И втТаблицаЗначений.ВидСтадииОбработки = mega_СкладскиеЗапасыОстатки.ВидСтадииОбработки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.mega_ПроизводственныеЗапасы.Остатки КАК mega_ПроизводственныеЗапасыОстатки
		|		ПО втТаблицаЗначений.Номенклатура = mega_ПроизводственныеЗапасыОстатки.Номенклатура
		|		И втТаблицаЗначений.ВидСтадииОбработки = mega_ПроизводственныеЗапасыОстатки.ВидСтадииОбработки";
	
	Запрос.УстановитьПараметр("ТаблицаЗначений", ТаблицаЗначений);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Возврат ВыборкаДетальныеЗаписи;
КонецФункции

&НаСервере
Функция ОстаткиМатериалыНаСервере()
	
	ТаблицаЗначений = Объект.Материалы.Выгрузить();
	ТаблицаЗначений.Свернуть("Номенклатура,ВидСтадииОбработки");
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаЗначений.Номенклатура,
		|	ТаблицаЗначений.ВидСтадииОбработки
		|ПОМЕСТИТЬ втТаблицаЗначений
		|ИЗ
		|	&ТаблицаЗначений КАК ТаблицаЗначений
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втТаблицаЗначений.Номенклатура,
		|	втТаблицаЗначений.ВидСтадииОбработки,
		|	mega_СкладскиеЗапасыОстатки.КоличествоОстаток КАК НаСкладе,
		|	mega_ПроизводственныеЗапасыОстатки.КоличествоОстаток КАК ВПроизводстве
		|ИЗ
		|	втТаблицаЗначений КАК втТаблицаЗначений
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.mega_СкладскиеЗапасы.Остатки КАК mega_СкладскиеЗапасыОстатки
		|		ПО втТаблицаЗначений.Номенклатура = mega_СкладскиеЗапасыОстатки.Номенклатура
		|		И втТаблицаЗначений.ВидСтадииОбработки = mega_СкладскиеЗапасыОстатки.ВидСтадииОбработки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.mega_ПроизводственныеЗапасы.Остатки КАК mega_ПроизводственныеЗапасыОстатки
		|		ПО втТаблицаЗначений.Номенклатура = mega_ПроизводственныеЗапасыОстатки.Номенклатура
		|		И втТаблицаЗначений.ВидСтадииОбработки = mega_ПроизводственныеЗапасыОстатки.ВидСтадииОбработки";
	
	Запрос.УстановитьПараметр("ТаблицаЗначений", ТаблицаЗначений);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Возврат ВыборкаДетальныеЗаписи;
КонецФункции

&НаСервере
Функция ОстаткиРесурсовНаСервере()
	
	ТаблицаЗначений = Объект.ОстаткиРесурсов.Выгрузить();
	ТаблицаЗначений.Свернуть("Ресурс");
	Ресурсы = ТаблицаЗначений.ВыгрузитьКолонку("Ресурс");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВложенныйЗапрос.Ресурс КАК Ресурс,
		|	ЕСТЬNULL(ВложенныйЗапрос.Остаток, 0) КАК Остаток
		|ИЗ
		|	(ВЫБРАТЬ
		|		mega_ПроизводственныеРесурсыОстатки.Ресурс КАК Ресурс,
		|		mega_ПроизводственныеРесурсыОстатки.ВремяОстаток КАК Остаток
		|	ИЗ
		|		РегистрНакопления.mega_ПроизводственныеРесурсы.Остатки(
		|				,
		|				ДатаРесурса = &ДатаРесурса
		|					И Ресурс В (&Ресурсы)) КАК mega_ПроизводственныеРесурсыОстатки) КАК ВложенныйЗапрос
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ресурс";
	
	Запрос.УстановитьПараметр("Ресурсы", Ресурсы);
	Запрос.УстановитьПараметр("ДатаРесурса", Объект.ДатаСмены);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Возврат ВыборкаДетальныеЗаписи;
КонецФункции

&НаСервере
Процедура ЗаполнитьОстаткиСоставНаСервере()
	
	ВыборкаДетальныеЗаписи = ОстаткиСоставНаСервере();
	Для Каждого ТекСтрокаСостав Из Объект.Состав Цикл
		ВыборкаДетальныеЗаписи.Сбросить();		
		ТекСтрокаСостав.НаСкладе = 0;
		ТекСтрокаСостав.ВПроизводстве = 0;
		ТекСтрокаСостав.Доступно = 0;
		
		Отбор = Новый Структура("Номенклатура,ВидСтадииОбработки");
		ЗаполнитьЗначенияСвойств(Отбор, ТекСтрокаСостав);
		
		Если ВыборкаДетальныеЗаписи.НайтиСледующий(Отбор) Тогда
			
			ТекСтрокаСостав.НаСкладе = ВыборкаДетальныеЗаписи.НаСкладе;
			ТекСтрокаСостав.ВПроизводстве = ВыборкаДетальныеЗаписи.ВПроизводстве;
			ТекСтрокаСостав.Доступно = ТекСтрокаСостав.НаСкладе + ТекСтрокаСостав.ВПроизводстве;  
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОстаткиВидыСтадийОбработкиНаСервере()
	
	ВыборкаДетальныеЗаписи = ОстаткиВидыСтадийОбработкиНаСервере();
	Для Каждого ТекСтрокаСостав Из Объект.ВидыСтадийОбработки Цикл
		ВыборкаДетальныеЗаписи.Сбросить();		
		ТекСтрокаСостав.НаСкладе = 0;
		ТекСтрокаСостав.ВПроизводстве = 0;
		ТекСтрокаСостав.Доступно = 0;
		
		Отбор = Новый Структура("Номенклатура,ВидСтадииОбработки");
		ЗаполнитьЗначенияСвойств(Отбор, ТекСтрокаСостав);
		
		Если ВыборкаДетальныеЗаписи.НайтиСледующий(Отбор) Тогда
			
			ТекСтрокаСостав.НаСкладе = ВыборкаДетальныеЗаписи.НаСкладе;
			ТекСтрокаСостав.ВПроизводстве = ВыборкаДетальныеЗаписи.ВПроизводстве;
			ТекСтрокаСостав.Доступно = ТекСтрокаСостав.НаСкладе + ТекСтрокаСостав.ВПроизводстве;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОстаткиМатериалыНаСервере()
	
	ВыборкаДетальныеЗаписи = ОстаткиМатериалыНаСервере();
	Для Каждого ТекСтрокаСостав Из Объект.Материалы Цикл
		ВыборкаДетальныеЗаписи.Сбросить();		
		ТекСтрокаСостав.НаСкладе = 0;
		ТекСтрокаСостав.ВПроизводстве = 0;
		ТекСтрокаСостав.ВПроизводстве = 0;
		
		Отбор = Новый Структура("Номенклатура,ВидСтадииОбработки");
		ЗаполнитьЗначенияСвойств(Отбор, ТекСтрокаСостав);
		
		Если ВыборкаДетальныеЗаписи.НайтиСледующий(Отбор) Тогда
			
			ТекСтрокаСостав.НаСкладе = ВыборкаДетальныеЗаписи.НаСкладе;
			ТекСтрокаСостав.ВПроизводстве = ВыборкаДетальныеЗаписи.ВПроизводстве;
			ТекСтрокаСостав.Доступно = ТекСтрокаСостав.НаСкладе + ТекСтрокаСостав.ВПроизводстве;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОстаткиРесурсовНаСервере()
	
	ВыборкаДетальныеЗаписи = ОстаткиРесурсовНаСервере();
	
	Для Каждого ТекСтрока Из Объект.ОстаткиРесурсов Цикл 
		
		ВыборкаДетальныеЗаписи.Сбросить();
		СтруктураПоиска = Новый Структура;	
		СтруктураПоиска.Вставить("Ресурс", ТекСтрока.Ресурс);
		
		Если ВыборкаДетальныеЗаписи.НайтиСледующий(СтруктураПоиска) Тогда 
			
			ТекСтрока.Остаток = ВыборкаДетальныеЗаписи.Остаток;			
		КонецЕсли;
		
		ТекСтрока.Занятость = 0;
		Если ТекСтрока.Остаток > 0 Тогда
			ТекСтрока.Занятость = ТекСтрока.Количество * 100 / ТекСтрока.Остаток;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры


// Управляет доступностью элементов формы.
&НаКлиенте
Процедура УправлениеДоступностью()
	

КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	МодульПодключаемыеКомандыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиент");
	МодульПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	МодульПодключаемыеКоманды = ОбщегоНазначения.ОбщийМодуль("ПодключаемыеКоманды");
	МодульПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	МодульПодключаемыеКомандыКлиентСервер = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиентСервер");
	МодульПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти 

