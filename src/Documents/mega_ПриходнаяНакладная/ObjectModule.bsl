///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2023, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
    	
	Ответственный    = Пользователи.ТекущийПользователь();
	Автор            = Пользователи.ТекущийПользователь();
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ                             
	|	Состав.НомерСтроки КАК НомерСтроки,
	|	&ВидДвижения КАК ВидДвижения,
	|	Состав.Ссылка.Дата КАК Период,
	|	Состав.Номенклатура КАК Номенклатура,
	|	Состав.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Состав.Количество КАК Количество,
	|	Состав.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаХранения,
	|	Состав.ВидСтадииОбработки КАК ВидСтадииОбработки,
	|	Состав.МестоХранения КАК МестоХранения,
	|	Состав.Ссылка.Подразделение КАК Подразделение
	|ИЗ
	|	Документ.mega_ПриходнаяНакладная.Состав КАК Состав
	|ГДЕ
	|	Состав.Ссылка = &СсылкаНаОбъект
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.УстановитьПараметр("СсылкаНаОбъект", ЭтотОбъект.Ссылка);
	Запрос.УстановитьПараметр("ВидДвижения", ВидДвиженияНакопления.Приход);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();                                             
	
    РегистрыНакопления.mega_СкладскиеЗапасы.ВыполнитьДвижение(ЭтотОбъект.Ссылка, Выборка);
               
    //Зявки внутренние и поставщикам
    Результаты = ПолучитьВыборкиДанныхДляДвиженийПоЗаявкам();   
    
	ВыборкаСостав = Результаты[0].Выбрать();
	ВыборкаЗавкиВнутренние = Результаты[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаЗавкиПоставщикам = Результаты[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);	
	
	
	ВыполнитьДвиженияПоЗавкамВнутренним(ВыборкаСостав, ВыборкаЗавкиВнутренние);                                             
	
	ВыборкаСостав.Сбросить();
	ВыполнитьДвиженияПоЗавкамПоставщикам(ВыборкаСостав, ВыборкаЗавкиПоставщикам);
		
	
	//Цены плановой себетостоимости
	РегистрыСведений.mega_ЦеныПлановойСебестоимости.УдалитьДвижения(ЭтотОбъект.Ссылка);
	Если ЭтотОбъект.РегистрироватьЦены Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ
			|	СоставЦены.Ссылка КАК Регистратор,
			|	СоставЦены.Ссылка.Дата КАК Период,
			|	СоставЦены.Номенклатура,
			|	СоставЦены.ВидСтадииОбработки,
			|	СоставЦены.Цена,
			|	СоставЦены.НомерСтроки КАК НомерСтроки
			|ИЗ
			|	Документ.mega_ПриходнаяНакладная.Состав КАК СоставЦены
			|ГДЕ
			|	СоставЦены.Ссылка = &СсылкаНаОбъект
			|
			|УПОРЯДОЧИТЬ ПО
			|	НомерСтроки";
		
		Запрос.УстановитьПараметр("СсылкаНаОбъект", ЭтотОбъект.Ссылка);
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		РегистрыСведений.mega_ЦеныПлановойСебестоимости.ВыполнитьДвижение(ЭтотОбъект.Ссылка, ВыборкаДетальныеЗаписи);
	КонецЕсли;	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
		
	ЭтотОбъект.СуммаДокумента = ЭтотОбъект.Состав.Итог("Сумма");
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
		
	Ответственный    = Пользователи.ТекущийПользователь();
	Автор            = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
    
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ВыполнитьДвиженияПоЗавкамПоставщикам(ВыборкаСостав, ВыборкаЗавкиПоставщикам)
	Движения.mega_ЗавкиПоставщикам.Записывать = Истина;
	
	Пока ВыборкаСостав.Следующий() Цикл
		
		КоличествоСписать = Справочники.mega_ЕдиницыИзмерения.ПеревестиИзЕдиницыВЕдиницу(
			ВыборкаСостав.Количество, ВыборкаСостав.ЕдиницаИзмерения, ВыборкаСостав.ЕдиницаХранения);
						
		ВыборкаЗавкиПоставщикам.Сбросить();
		СтруктураПоиска = Новый Структура("Номенклатура", ВыборкаСостав.Номенклатура);
		Если ВыборкаЗавкиПоставщикам.НайтиСледующий(СтруктураПоиска) Тогда
			ВыборкаДокументы = ВыборкаЗавкиПоставщикам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаДокументы.Следующий() И КоличествоСписать > 0 Цикл
				
				Количество = КоличествоСписать;								
				Если КоличествоСписать > ВыборкаДокументы.Количество Тогда
					
					Количество = ВыборкаДокументы.Количество;
					КоличествоСписать = КоличествоСписать - ВыборкаДокументы.Количество;
				Иначе
					  				
					 КоличествоСписать = 0;
				КонецЕсли;
				
				НоваяСтрока = Движения.mega_ЗавкиПоставщикам.Добавить();
				НоваяСтрока.ВидДвижения = ВидДвиженияНакопления.Расход;
				НоваяСтрока.Период = ЭтотОбъект.Дата;
				НоваяСтрока.Регистратор = ЭтотОбъект.Ссылка;
				НоваяСтрока.ДокументПотребности = ВыборкаДокументы.ДокументПотребности;
				НоваяСтрока.Номенклатура = ВыборкаДокументы.Номенклатура;
				НоваяСтрока.Количество = Количество;				
			КонецЦикла;
		КонецЕсли;	                                             	
	КонецЦикла;
КонецПроцедуры 

Процедура ВыполнитьДвиженияПоЗавкамВнутренним(ВыборкаСостав, ВыборкаЗавкиВнутренние)
	Движения.mega_ЗавкиВнутренние.Записывать = Истина;
	
	Пока ВыборкаСостав.Следующий() Цикл
		
		КоличествоСписать = Справочники.mega_ЕдиницыИзмерения.ПеревестиИзЕдиницыВЕдиницу(
			ВыборкаСостав.Количество, ВыборкаСостав.ЕдиницаИзмерения, ВыборкаСостав.ЕдиницаХранения);
						
		ВыборкаЗавкиВнутренние.Сбросить();
		СтруктураПоиска = Новый Структура("Номенклатура", ВыборкаСостав.Номенклатура);
		Если ВыборкаЗавкиВнутренние.НайтиСледующий(СтруктураПоиска) Тогда
			ВыборкаДокументы = ВыборкаЗавкиВнутренние.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаДокументы.Следующий() И КоличествоСписать > 0 Цикл
				
				Количество = КоличествоСписать;								
				Если КоличествоСписать > ВыборкаДокументы.Количество Тогда
					
					Количество = ВыборкаДокументы.Количество;
					КоличествоСписать = КоличествоСписать - ВыборкаДокументы.Количество;
				Иначе
					  				
					 КоличествоСписать = 0;
				КонецЕсли;
				
				НоваяСтрока = Движения.mega_ЗавкиВнутренние.Добавить();
				НоваяСтрока.ВидДвижения = ВидДвиженияНакопления.Расход;
				НоваяСтрока.Период = ЭтотОбъект.Дата;
				НоваяСтрока.Регистратор = ЭтотОбъект.Ссылка;
				НоваяСтрока.ДокументПотребности = ВыборкаДокументы.ДокументПотребности;
				НоваяСтрока.Номенклатура = ВыборкаДокументы.Номенклатура;
				НоваяСтрока.Количество = Количество;				
			КонецЦикла;
		КонецЕсли;	                                             	
	КонецЦикла;	
КонецПроцедуры

Функция ПолучитьВыборкиДанныхДляДвиженийПоЗаявкам()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Состав.Номенклатура КАК Номенклатура,
	|	Состав.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СУММА(Состав.Количество) КАК Количество,
	|	Состав.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаХранения
	|ИЗ
	|	Документ.mega_ПриходнаяНакладная.Состав КАК Состав
	|ГДЕ
	|	Состав.Ссылка = &СсылкаНаОбъект
	|СГРУППИРОВАТЬ ПО
	|	Состав.Номенклатура,
	|	Состав.ЕдиницаИзмерения,
	|	Состав.Номенклатура.ЕдиницаИзмерения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗавкиВнутренние.Номенклатура КАК Номенклатура,
	|	ЗавкиВнутренние.ДокументПотребности КАК ДокументПотребности,
	|	ЗавкиВнутренние.КоличествоОстаток КАК Количество
	|ИЗ
	|	РегистрНакопления.mega_ЗавкиВнутренние.Остатки(, Номенклатура В
	|		(ВЫБРАТЬ
	|			mega_ПриходнаяНакладнаяСостав.Номенклатура
	|		ИЗ
	|			Документ.mega_ПриходнаяНакладная.Состав КАК mega_ПриходнаяНакладнаяСостав
	|		ГДЕ
	|			mega_ПриходнаяНакладнаяСостав.Ссылка = &СсылкаНаОбъект)) КАК ЗавкиВнутренние
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗавкиВнутренние.ДокументПотребности.Дата
	|АВТОУПОРЯДОЧИВАНИЕ
	|ИТОГИ
	|	СУММА(Количество)
	|ПО
	|	Номенклатура,
	|	ДокументПотребности
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗавкиПоставщикам.Номенклатура КАК Номенклатура,
	|	ЗавкиПоставщикам.ДокументПотребности КАК ДокументПотребности,
	|	ЗавкиПоставщикам.КоличествоОстаток КАК Количество
	|ИЗ
	|	РегистрНакопления.mega_ЗавкиПоставщикам.Остатки(, Номенклатура В
	|		(ВЫБРАТЬ
	|			mega_ПриходнаяНакладнаяСостав.Номенклатура
	|		ИЗ
	|			Документ.mega_ПриходнаяНакладная.Состав КАК mega_ПриходнаяНакладнаяСостав
	|		ГДЕ
	|			mega_ПриходнаяНакладнаяСостав.Ссылка = &СсылкаНаОбъект)) КАК ЗавкиПоставщикам
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗавкиПоставщикам.ДокументПотребности.Дата
	|АВТОУПОРЯДОЧИВАНИЕ
	|ИТОГИ
	|	СУММА(Количество)
	|ПО
	|	Номенклатура,
	|	ДокументПотребности";
	
	Запрос.УстановитьПараметр("СсылкаНаОбъект", ЭтотОбъект.Ссылка);
	
	
	Результаты = Запрос.ВыполнитьПакет();
	Возврат Результаты;
КонецФункции

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли