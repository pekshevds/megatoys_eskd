///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2023, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКоманды = ОбщегоНазначения.ОбщийМодуль("ПодключаемыеКоманды");
		МодульПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры   

&НаКлиенте
Процедура ПриОткрытии(Отказ)  
	
	УправлениеДоступностью();	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКомандыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиент");
		МодульПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКомандыКлиентСервер = ОбщегоНазначения.ОбщийМодуль("ПодключаемыеКомандыКлиентСервер");
		МодульПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКомандыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиент");
		МодульПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗафиксироватьЦеныПоставщика(Команда)
	
	Если Объект.Состав.Количество() = 0 ИЛИ НЕ ЗначениеЗаполнено(Объект.Поставщик) Тогда
		
		Возврат;
	КонецЕсли;
	
	Записать(Новый Структура("РемимЗаписи", РежимЗаписиДокумента.Запись));	
	ЗафиксироватьЦеныПоставщикаНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСостав

&НаКлиенте
Процедура СоставНоменклатураПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Состав	.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		
		Структура = Новый Структура(
		"Номенклатура,
		|ВидСтадииОбработки,
		|ЕдиницаИзмерения,
		|Количество,		
		|Цена,
		|Сумма,
		|СтавкаНДС,
		|СуммаНДС,
		|ДатаЦен");
		ЗаполнитьЗначенияСвойств(Структура, ТекущиеДанные);
		Структура.ДатаЦен = Объект.Дата;
		
		ПриИзмененииНоменклатурыНаСервере(Структура);
		
		ЗаполнитьЗначенияСвойств(ТекущиеДанные, Структура);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СоставВидСтадииОбработкиПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Состав	.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		
		Структура = Новый Структура(
		"Номенклатура,
		|ВидСтадииОбработки,
		|ЕдиницаИзмерения,
		|Количество,		
		|Цена,
		|Сумма,
		|СтавкаНДС,
		|СуммаНДС,
		|ДатаЦен,
		|СуммаВключаетНДС");
		ЗаполнитьЗначенияСвойств(Структура, ТекущиеДанные);
		Структура.ДатаЦен = Объект.Дата;
		Структура.СуммаВключаетНДС = Объект.СуммаВключаетНДС;
		
		ПриИзмененииНоменклатурыНаСервере(Структура);
		
		ЗаполнитьЗначенияСвойств(ТекущиеДанные, Структура);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоставКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Состав	.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		
		Структура = Новый Структура(
		"Количество,		
		|Цена,
		|Сумма,
		|СтавкаНДС,
		|СуммаНДС,
		|СуммаВключаетНДС");
		ЗаполнитьЗначенияСвойств(Структура, ТекущиеДанные);
		Структура.СуммаВключаетНДС = Объект.СуммаВключаетНДС;
		
		ПриИзмененииКоличествоЦеныНаСервере(Структура);
		ЗаполнитьЗначенияСвойств(ТекущиеДанные, Структура);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоставЦенаПриИзменении(Элемент)

	ТекущиеДанные = Элементы.Состав	.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		
		Структура = Новый Структура(
		"Количество,		
		|Цена,
		|Сумма,
		|СтавкаНДС,
		|СуммаНДС,
		|СуммаВключаетНДС");
		ЗаполнитьЗначенияСвойств(Структура, ТекущиеДанные);
		Структура.СуммаВключаетНДС = Объект.СуммаВключаетНДС;
		
		ПриИзмененииКоличествоЦеныНаСервере(Структура);
		ЗаполнитьЗначенияСвойств(ТекущиеДанные, Структура);
	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура СоставСтавкаНДСПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Состав	.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		
		Структура = Новый Структура(
		"Количество,		
		|Цена,
		|Сумма,
		|СтавкаНДС,
		|СуммаНДС,
		|СуммаВключаетНДС");
		ЗаполнитьЗначенияСвойств(Структура, ТекущиеДанные);
		Структура.СуммаВключаетНДС = Объект.СуммаВключаетНДС;
		
		ПриИзмененииСтавкиНДСНаСервере(Структура);
		ЗаполнитьЗначенияСвойств(ТекущиеДанные, Структура);
	КонецЕсли;
КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗафиксироватьЦеныПоставщикаНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Состав.Ссылка.Поставщик КАК Поставщик,
		|	Состав.Номенклатура,
		|	Состав.Цена,
		|	Состав.Ссылка.Дата КАК Период
		|ИЗ
		|	Документ.mega_ПриходнаяНакладная.Состав КАК Состав
		|ГДЕ
		|	Состав.Ссылка = &ТекущийДокумент";
	
	Запрос.УстановитьПараметр("ТекущийДокумент", Объект.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	РегистрыСведений.mega_ЦеныПоставщиков.ЗафиксироватьЦены(ВыборкаДетальныеЗаписи);	
КонецПроцедуры


&НаСервереБезКонтекста
Процедура ПриИзмененииНоменклатурыНаСервере(Структура)
	
	Структура.ЕдиницаИзмерения = Справочники.mega_ЕдиницыИзмерения.ПустаяСсылка();	
	Структура.Цена = 0;
	Структура.Сумма = 0;
	Структура.СтавкаНДС = Перечисления.mega_СтавкиНДС.ПолучитьСтавкуНДСПоУмолчанию();
	Структура.СуммаНДС = 0;
			
	Если ЗначениеЗаполнено(Структура.Номенклатура) Тогда
		
		Структура.ЕдиницаИзмерения = 
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Структура.Номенклатура, "ЕдиницаИзмерения");
			
		Структура.Цена = РегистрыСведений.mega_ЦеныПлановойСебестоимости.ПолучитьПоследнююЦенуПлановойСебестоимости(
			Структура.Номенклатура, Структура.ВидСтадииОбработки, Структура.ДатаЦен);
		//Структура.Сумма = Структура.Количество * Структура.Цена;
		mega_ТиповыеРасчеты.РассчитатьСтрокуДокумента(Структура);
	КонецЕсли;	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПриИзмененииСтавкиНДСНаСервере(Структура)
	
	Структура.СуммаНДС = 0;
	mega_ТиповыеРасчеты.РассчитатьСтрокуДокумента(Структура);	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПриИзмененииКоличествоЦеныНаСервере(Структура)
	
	Структура.СуммаНДС = 0;
	Структура.Сумма = 0;			
	mega_ТиповыеРасчеты.РассчитатьСтрокуДокумента(Структура);
КонецПроцедуры

// Управляет доступностью элементов формы.
&НаКлиенте
Процедура УправлениеДоступностью()
	

КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	МодульПодключаемыеКомандыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиент");
	МодульПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	МодульПодключаемыеКоманды = ОбщегоНазначения.ОбщийМодуль("ПодключаемыеКоманды");
	МодульПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	МодульПодключаемыеКомандыКлиентСервер = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиентСервер");
	МодульПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти
