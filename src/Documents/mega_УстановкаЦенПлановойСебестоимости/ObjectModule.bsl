///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2023, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс


#Область ДляВызоваИзДругихПодсистем

Процедура ЗаполнитьОперацииПоСпецификации(Спецификация) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	mega_СпецификацииТехнологическиеОперации.Номенклатура,
		|	mega_СпецификацииТехнологическиеОперации.ЕдиницаИзмерения
		|ИЗ
		|	Справочник.mega_Спецификации.ТехнологическиеОперации КАК mega_СпецификацииТехнологическиеОперации
		|ГДЕ
		|	mega_СпецификацииТехнологическиеОперации.Ссылка = &Спецификация";
	
	Запрос.УстановитьПараметр("Спецификация", Спецификация);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Номенклатура", ВыборкаДетальныеЗаписи.Номенклатура);
		Если ЭтотОбъект.Состав.НайтиСтроки(СтруктураПоиска).Количество() = 0 Тогда
			
			НоваяСтрока = ЭтотОбъект.Состав.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДетальныеЗаписи);		
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры

Процедура ЗаполнитьВидыСтадийОбработкиПоСпецификации(Спецификация) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	mega_СпецификацииСтадииОбработки.Ссылка.Владелец КАК Номенклатура,
		|	mega_СпецификацииСтадииОбработки.ВидСтадииОбработки КАК ВидСтадииОбработки,
		|	mega_СпецификацииСтадииОбработки.Ссылка.Владелец.ЕдиницаИзмерения КАК ЕдиницаИзмерения
		|ИЗ
		|	Справочник.mega_Спецификации.СтадииОбработки КАК mega_СпецификацииСтадииОбработки
		|ГДЕ
		|	mega_СпецификацииСтадииОбработки.Ссылка = &Спецификация";
	
	Запрос.УстановитьПараметр("Спецификация", Спецификация);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Номенклатура", ВыборкаДетальныеЗаписи.Номенклатура);
		СтруктураПоиска.Вставить("ВидСтадииОбработки", ВыборкаДетальныеЗаписи.ВидСтадииОбработки);
		
		Если ЭтотОбъект.Состав.НайтиСтроки(СтруктураПоиска).Количество() = 0 Тогда
			
			НоваяСтрока = ЭтотОбъект.Состав.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДетальныеЗаписи);		
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры

Процедура ЗаполнитьМатериалыПоСпецификации(Спецификация) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	mega_СпецификацииМатериалы.Номенклатура,
		|	mega_СпецификацииМатериалы.СтадияОбработки КАК ВидСтадииОбработки,
		|	mega_СпецификацииМатериалы.ЕдиницаИзмерения
		|ИЗ
		|	Справочник.mega_Спецификации.Материалы КАК mega_СпецификацииМатериалы
		|ГДЕ
		|	mega_СпецификацииМатериалы.Ссылка = &Спецификация";
	
	Запрос.УстановитьПараметр("Спецификация", Спецификация);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Номенклатура", ВыборкаДетальныеЗаписи.Номенклатура);
		СтруктураПоиска.Вставить("ВидСтадииОбработки", ВыборкаДетальныеЗаписи.ВидСтадииОбработки);
		
		Если ЭтотОбъект.Состав.НайтиСтроки(СтруктураПоиска).Количество() = 0 Тогда
			
			НоваяСтрока = ЭтотОбъект.Состав.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДетальныеЗаписи);		
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры

Процедура ЗаполнитьПоДокументуОснованию() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ПриходнаяНакладнаяСостав.НомерСтроки,
		|	ПриходнаяНакладнаяСостав.Номенклатура,
		|	ПриходнаяНакладнаяСостав.ЕдиницаИзмерения,
		|	ПриходнаяНакладнаяСостав.ВидСтадииОбработки,
		|	ПриходнаяНакладнаяСостав.Цена
		|ИЗ
		|	Документ.mega_ПриходнаяНакладная.Состав КАК ПриходнаяНакладнаяСостав
		|ГДЕ
		|	ПриходнаяНакладнаяСостав.Ссылка = &ДокументОснование";
	
	Запрос.УстановитьПараметр("ДокументОснование", ЭтотОбъект.ДокументОснование);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		НоваяСтрока = ЭтотОбъект.Состав.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДетальныеЗаписи);		
	КонецЦикла;	
КонецПроцедуры

Процедура ЗаполнитьНулевыми() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
			"ВЫБРАТЬ
			|	mega_Номенклатура.Ссылка КАК Номенклатура,
			|	ЕСТЬNULL(mega_ЦеныПлановойСебестоимостиСрезПоследних.Цена, 0) КАК Цена
			|ПОМЕСТИТЬ втЦены
			|ИЗ
			|	Справочник.mega_Номенклатура КАК mega_Номенклатура
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.mega_ЦеныПлановойСебестоимости.СрезПоследних КАК
			|			mega_ЦеныПлановойСебестоимостиСрезПоследних
			|		ПО mega_Номенклатура.Ссылка = mega_ЦеныПлановойСебестоимостиСрезПоследних.Номенклатура
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	втЦены.Номенклатура КАК Номенклатура,
			|	втЦены.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|	втЦены.Цена
			|ИЗ
			|	втЦены КАК втЦены
			|ГДЕ
			|	втЦены.Цена = 0
			|	И НЕ втЦены.Номенклатура.ЭтоГруппа";
		
	РезультатЗапроса = Запрос.Выполнить();
		
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Номенклатура", ВыборкаДетальныеЗаписи.Номенклатура);
		
		Строки = Состав.НайтиСтроки(СтруктураПоиска);
		Если Строки.Количество() = 0 Тогда
			
			НоваяСтрока = Состав.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДетальныеЗаписи);
		КонецЕсли;
	КонецЦикла;
		
КонецПроцедуры

Процедура ИзменитьЦеныНаПроцент(Процент) Экспорт
	
	Доля = 1 + (Процент / 100);
	Для Каждого ТекСтрока Из Состав Цикл
		
		ТекСтрока.Цена = ТекСтрока.Цена * Доля;  
	КонецЦикла;	
КонецПроцедуры

// Заполняет состав номенклатурой в иерархии группы.
// 
// Параметры:
//  Группа - СправочникСсылка.mega_Номенклатура - Группа номенклатуры
Процедура ЗаполнитьПоГруппе(Группа) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	НоменклатураСписок.Ссылка КАК Номенклатура,
		|	НоменклатураСписок.ЕдиницаИзмерения,
		|	НоменклатураСписок.Спецификация,
		|	НоменклатураСписок.Спецификация.СтадииОбработки.(
		|		Ссылка,
		|		НомерСтроки,
		|		ВидСтадииОбработки,
		|		КлючСвязи,
		|		Количество)
		|ИЗ
		|	Справочник.mega_Номенклатура КАК НоменклатураСписок
		|ГДЕ
		|	НоменклатураСписок.Ссылка В ИЕРАРХИИ (&Группа)
		|	И (НЕ НоменклатураСписок.ЭтоГруппа
		|	И НЕ НоменклатураСписок.ПометкаУдаления)";
	
	Запрос.УстановитьПараметр("Группа", Группа);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Номенклатура", ВыборкаДетальныеЗаписи.Номенклатура);
		
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Спецификация) Тогда
			
			ВыборкаВидСтадииОбработки = ВыборкаДетальныеЗаписи.Поле1.Выбрать();
			Пока ВыборкаВидСтадииОбработки.Следующий() Цикл
				
				СтруктураПоиска.Вставить("ВидСтадииОбработки", ВыборкаВидСтадииОбработки.ВидСтадииОбработки);
				Строки = Состав.НайтиСтроки(СтруктураПоиска);
				Если Строки.Количество() = 0 Тогда
					
					НоваяСтрока = ЭтотОбъект.Состав.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДетальныеЗаписи);
					НоваяСтрока.ВидСтадииОбработки = ВыборкаВидСтадииОбработки.ВидСтадииОбработки;
				КонецЕсли;
			КонецЦикла;
		Иначе
			
			Строки = Состав.НайтиСтроки(СтруктураПоиска);
			Если Строки.Количество() = 0 Тогда
				НоваяСтрока = ЭтотОбъект.Состав.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДетальныеЗаписи);
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
    	
	Ответственный    = Пользователи.ТекущийПользователь();
	Автор            = Пользователи.ТекущийПользователь();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.mega_ПриходнаяНакладная") И 
		ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		
		ДокументОснование = ДанныеЗаполнения;	
		ЗаполнитьПоДокументуОснованию();
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	УстановкаЦенПлановойСебестоимостиСостав.НомерСтроки КАК НомерСтроки,
		|	УстановкаЦенПлановойСебестоимостиСостав.Номенклатура,
		|	УстановкаЦенПлановойСебестоимостиСостав.Цена,
		|	УстановкаЦенПлановойСебестоимостиСостав.ВидСтадииОбработки,
		|	УстановкаЦенПлановойСебестоимостиСостав.Ссылка КАК Регистратор,
		|	УстановкаЦенПлановойСебестоимостиСостав.Ссылка.Дата КАК Период
		|ИЗ
		|	Документ.mega_УстановкаЦенПлановойСебестоимости.Состав КАК УстановкаЦенПлановойСебестоимостиСостав
		|ГДЕ
		|	УстановкаЦенПлановойСебестоимостиСостав.Ссылка = &СсылкаНаОбъект
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
	
	Запрос.УстановитьПараметр("СсылкаНаОбъект", ЭтотОбъект.Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();	
	РегистрыСведений.mega_ЦеныПлановойСебестоимости.ВыполнитьДвижение(ЭтотОбъект.Ссылка, ВыборкаДетальныеЗаписи);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
		
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
		
	Ответственный    = Пользователи.ТекущийПользователь();
	Автор            = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
    
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли