
#Область ОписаниеПеременных

#КонецОбласти


#Область ОбработчикиСобытийФормы

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура РассчитатьМатериалыИРаботы(Команда)
	
	РассчитатьМатериалыИРаботыНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура РаспределитьПоСменнымЗаданиям(Команда)
	
	ПроизводственныеРесурсы = ПолучитьПроизводственныеРесурсыНаСервере();
	Для Каждого ПроизводственныйРесурс Из ПроизводственныеРесурсы Цикл
		
		Форма = ПолучитьФорму("Документ.mega_СменноеЗадание.ФормаОбъекта",,, Истина);
		СменноеЗадание = Форма.Объект;
		
		ЗаполнитьСменноеЗадание(СменноеЗадание, ПроизводственныйРесурс);
		
		КопироватьДанныеФормы(СменноеЗадание, Форма.Объект);
		Форма.Открыть();
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ДополнитьСоставСопутствующимиИзделиями(Команда)

	ДополнитьСоставСопутствующимиНаСервере();
	ЗаполнитьОстатки();
КонецПроцедуры

&НаКлиенте
Процедура ДополнитьСоставВложенымиИзделиями(Команда)
	
	ДополнитьСоставВложенымиНаСервере();
	ЗаполнитьОстатки();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ДополнитьСоставСопутствующими(ТекСтрокаСостав)
	
	ЕстьЗвисимыеИзделия = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекСтрокаСостав.Номенклатура, "ЕстьСопутствующиеИзделия");
	Если Не ЕстьЗвисимыеИзделия Тогда
			
		Возврат
	КонецЕсли;
	
	ЗависимыеИзделия = РегистрыСведений.mega_СопутствующиеИзделия.ПолучитьСопутствующиеИзделия(ТекСтрокаСостав.Номенклатура);
	Пока ЗависимыеИзделия.Следующий() Цикл
			
		НоваяСтрока = Объект.Состав.Добавить();
		НоваяСтрока.Номенклатура = ЗависимыеИзделия.Номенклатура;
		НоваяСтрока.ЕдиницаИзмерения = 
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НоваяСтрока.Номенклатура, "ЕдиницаИзмерения");
		НоваяСтрока.Спецификация = 
			Справочники.mega_Спецификации.ПолучитьОсновнуюСпецификациюНоменклатуры(НоваяСтрока.Номенклатура);
			
		НоваяСтрока.Количество = ТекСтрокаСостав.Количество * ЗависимыеИзделия.Количество;
		
		ДополнитьСоставСопутствующими(НоваяСтрока);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ДополнитьСоставВложеными(ТекСтрокаСостав)
	
	МатериалыСпецификации = Справочники.mega_Спецификации.ПолучитьМатериалыСпецификации(ТекСтрокаСостав.Спецификация, ТекСтрокаСостав.Количество);
	
	Пока МатериалыСпецификации.Следующий() Цикл
		
		Если ЗначениеЗаполнено(МатериалыСпецификации.СтадияОбработки) Тогда
		
			НоваяСтрока = Объект.Состав.Добавить();
			НоваяСтрока.Номенклатура = МатериалыСпецификации.Номенклатура;
			НоваяСтрока.ЕдиницаИзмерения = МатериалыСпецификации.ЕдиницаИзмерения;
			НоваяСтрока.Спецификация = МатериалыСпецификации.Спецификация;
			НоваяСтрока.ВидСтадииОбработки = МатериалыСпецификации.СтадияОбработки;
			НоваяСтрока.Количество = МатериалыСпецификации.Количество;
			
			ДополнитьСоставВложеными(НоваяСтрока);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ДополнитьСоставСопутствующимиНаСервере()
	Состав = Объект.Состав.Выгрузить();
	Для Каждого ТекСтрокаСостав Из Состав Цикл
		
		ДополнитьСоставСопутствующими(ТекСтрокаСостав);		
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ДополнитьСоставВложенымиНаСервере()
	Состав = Объект.Состав.Выгрузить();
	Для Каждого ТекСтрокаСостав Из Состав Цикл
		
		Если ЗначениеЗаполнено(ТекСтрокаСостав.Спецификация) Тогда
			
			ДополнитьСоставВложеными(ТекСтрокаСостав);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ПолучитьПроизводственныеРесурсыНаСервере()
	ВременнаяТаблица = Объект.ОстаткиРесурсов.Выгрузить();
	ВременнаяТаблица.Свернуть("Ресурс");
	
	Возврат ВременнаяТаблица.ВыгрузитьКолонку("Ресурс");
КонецФункции

&НаСервере
Процедура ЗаполнитьСменноеЗадание(СменноеЗадание, ПроизводственныйРесурс)
	
	СменноеЗадание.ПроизводственныйРесурс = ПроизводственныйРесурс;
	СменноеЗадание.ДатаСмены = Объект.ДатаСмены;
	
	Для Каждого ТекСтрокаСостав Из Объект.Состав Цикл
		
		Если ЗначениеЗаполнено(ТекСтрокаСостав.ВидСтадииОбработки) И 
			ЗначениеЗаполнено(ТекСтрокаСостав.Спецификация) Тогда
				
			ДоступныеТехнологическиеОперации = 
				Справочники.mega_Спецификации.ПолучитьТехнологическиеОперацииСпецификацииПоВидуСтадииОбработки(
					ТекСтрокаСостав.Спецификация, ТекСтрокаСостав.ВидСтадииОбработки, ТекСтрокаСостав.Количество);
			
			Пока ДоступныеТехнологическиеОперации.Следующий() Цикл
				
				Если ПроизводственныйРесурс <> 
					ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
						ДоступныеТехнологическиеОперации.Номенклатура, "ПроизводственныйРесурс") Тогда
					Продолжить;
				КонецЕсли;
				
				НоваяСтрока = СменноеЗадание.ТехнологическиеОперации.Добавить();
				НоваяСтрока.Номенклатура = ТекСтрокаСостав.Номенклатура;
				НоваяСтрока.Спецификация = ТекСтрокаСостав.Спецификация;
				НоваяСтрока.ЕдиницаИзмерения = ТекСтрокаСостав.ЕдиницаИзмерения;
				НоваяСтрока.Количество = ТекСтрокаСостав.Количество;
				НоваяСтрока.ВидСтадииОбработки = ТекСтрокаСостав.ВидСтадииОбработки;
				
				НоваяСтрока.ТехнологическаяОперация = ДоступныеТехнологическиеОперации.Номенклатура;
				НоваяСтрока.ТехнологическаяОперацияКоличество = ДоступныеТехнологическиеОперации.Количество;
				НоваяСтрока.ТехнологическаяОперацияЕдиницаИзмерения = 
					ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НоваяСтрока.ТехнологическаяОперация, "ЕдиницаИзмерения");
			КонецЦикла;	
			Продолжить;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ТекСтрокаСостав.Спецификация) Тогда
			
			СтадииОбработки = Справочники.mega_Спецификации.ПолучитьСтадииОбработкиСпецификации(ТекСтрокаСостав.Спецификация);
			Пока СтадииОбработки.Следующий() Цикл
				
				ДоступныеТехнологическиеОперации = 
				Справочники.mega_Спецификации.ПолучитьТехнологическиеОперацииСпецификацииПоВидуСтадииОбработки(
					ТекСтрокаСостав.Спецификация, СтадииОбработки.ВидСтадииОбработки, ТекСтрокаСостав.Количество);
					
				Пока ДоступныеТехнологическиеОперации.Следующий() Цикл
				
					Если ПроизводственныйРесурс <> 
						ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
							ДоступныеТехнологическиеОперации.Номенклатура, "ПроизводственныйРесурс") Тогда
						Продолжить;
					КонецЕсли;
					
					НоваяСтрока = СменноеЗадание.ТехнологическиеОперации.Добавить();
					НоваяСтрока.Номенклатура = ТекСтрокаСостав.Номенклатура;
					НоваяСтрока.Спецификация = ТекСтрокаСостав.Спецификация;
					НоваяСтрока.ЕдиницаИзмерения = ТекСтрокаСостав.ЕдиницаИзмерения;
					НоваяСтрока.Количество = ТекСтрокаСостав.Количество;
					НоваяСтрока.ВидСтадииОбработки = СтадииОбработки.ВидСтадииОбработки;
					
					НоваяСтрока.ТехнологическаяОперация = ДоступныеТехнологическиеОперации.Номенклатура;
					НоваяСтрока.ТехнологическаяОперацияКоличество = ДоступныеТехнологическиеОперации.Количество;
					НоваяСтрока.ТехнологическаяОперацияЕдиницаИзмерения = 
						ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НоваяСтрока.ТехнологическаяОперация, "ЕдиницаИзмерения");
				КонецЦикла;								
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ПолучитьОстаткиРесурсов(Ресурсы)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Ресурс КАК Ресурс,
	|	ВложенныйЗапрос.Остаток КАК Остаток
	|ИЗ
	|	(ВЫБРАТЬ
	|		mega_ПроизводственныеРесурсыОстатки.Ресурс КАК Ресурс,
	|		mega_ПроизводственныеРесурсыОстатки.ВремяОстаток КАК Остаток
	|	ИЗ
	|		РегистрНакопления.mega_ПроизводственныеРесурсы.Остатки(
	|				,
	|				ДатаРесурса = &ДатаРесурса
	|					И Ресурс В (&Ресурсы)) КАК mega_ПроизводственныеРесурсыОстатки) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ресурс";
	
	Запрос.УстановитьПараметр("ДатаРесурса", Объект.ДатаСмены);
	Запрос.УстановитьПараметр("Ресурсы", Ресурсы);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Возврат Выборка;	
КонецФункции

&НаСервере
Функция ПолучитьОстатки(Номенклатура)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	СУММА(ВложенныйЗапрос.ВПроизводстве) КАК ВПроизводстве,
	|	СУММА(ВложенныйЗапрос.НаСкладе) КАК НаСкладе,
	|	ВложенныйЗапрос.ВидСтадииОбработки КАК ВидСтадииОбработки
	|ИЗ
	|	(ВЫБРАТЬ
	|		mega_ПроизводственныеЗапасыОстатки.Номенклатура КАК Номенклатура,
	|		mega_ПроизводственныеЗапасыОстатки.КоличествоОстаток КАК ВПроизводстве,
	|		0 КАК НаСкладе,
	|		mega_ПроизводственныеЗапасыОстатки.ВидСтадииОбработки КАК ВидСтадииОбработки
	|	ИЗ
	|		РегистрНакопления.mega_ПроизводственныеЗапасы.Остатки(, Номенклатура В (&Номенклатура)) КАК mega_ПроизводственныеЗапасыОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		mega_СкладскиеЗапасыОстатки.Номенклатура,
	|		0,
	|		mega_СкладскиеЗапасыОстатки.КоличествоОстаток,
	|		mega_СкладскиеЗапасыОстатки.ВидСтадииОбработки
	|	ИЗ
	|		РегистрНакопления.mega_СкладскиеЗапасы.Остатки(, Номенклатура В (&Номенклатура)) КАК mega_СкладскиеЗапасыОстатки) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.ВидСтадииОбработки";
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Возврат Выборка;	
КонецФункции

&НаСервере
Функция ПолучитьОстаткиДляСостава()
	
	 Возврат ПолучитьОстатки(Объект.Состав.Выгрузить().ВыгрузитьКолонку("Номенклатура"));
 КонецФункции
 
&НаСервере
Функция ПолучитьОстаткиДляМатериалов()
	
	 Возврат ПолучитьОстатки(Объект.Материалы.Выгрузить().ВыгрузитьКолонку("Номенклатура"));
КонецФункции

&НаСервере
Функция ПолучитьОстаткиДляВидовСтадийОбработки()
	
	 Возврат ПолучитьОстатки(Объект.ВидыСтадийОбработки.Выгрузить().ВыгрузитьКолонку("Номенклатура"));
КонецФункции

&НаСервере
Процедура ЗаполнитьОстатки()
	
	ОстаткиДляСостава = ПолучитьОстаткиДляСостава();
	
	Для Каждого ТекСтрока Из Объект.Состав Цикл 
		
		ОстаткиДляСостава.Сбросить();
		СтруктураПоиска = Новый Структура;	
		СтруктураПоиска.Вставить("Номенклатура", ТекСтрока.Номенклатура);
		СтруктураПоиска.Вставить("ВидСтадииОбработки", ТекСтрока.ВидСтадииОбработки);
		
		Если ОстаткиДляСостава.НайтиСледующий(СтруктураПоиска) Тогда 
			
			ТекСтрока.ВПроизводстве = ОстаткиДляСостава.ВПроизводстве;
			ТекСтрока.НаСкладе = ОстаткиДляСостава.НаСкладе;
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры 

&НаСервере
Процедура ЗаполнитьОстаткиМатериалов()
	
	ОстаткиДляМатериалов = ПолучитьОстаткиДляМатериалов();
	
	Для Каждого ТекСтрока Из Объект.Материалы Цикл 
		
		ОстаткиДляМатериалов.Сбросить();
		СтруктураПоиска = Новый Структура;	
		СтруктураПоиска.Вставить("Номенклатура", ТекСтрока.Номенклатура);
		СтруктураПоиска.Вставить("ВидСтадииОбработки", ТекСтрока.ВидСтадииОбработки);
		
		Если ОстаткиДляМатериалов.НайтиСледующий(СтруктураПоиска) Тогда 
			
			ТекСтрока.ВПроизводстве = ОстаткиДляМатериалов.ВПроизводстве;
			ТекСтрока.НаСкладе = ОстаткиДляМатериалов.НаСкладе;
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОстаткиВидовСтадийОбработки()
	
	ОстаткиДляВидовСтадийОбработки = ПолучитьОстаткиДляВидовСтадийОбработки();
	
	Для Каждого ТекСтрока Из Объект.ВидыСтадийОбработки Цикл 
		
		ОстаткиДляВидовСтадийОбработки.Сбросить();
		СтруктураПоиска = Новый Структура;	
		СтруктураПоиска.Вставить("Номенклатура", ТекСтрока.Номенклатура);
		СтруктураПоиска.Вставить("ВидСтадииОбработки", ТекСтрока.ВидСтадииОбработки);
		
		Если ОстаткиДляВидовСтадийОбработки.НайтиСледующий(СтруктураПоиска) Тогда 
			
			ТекСтрока.ВПроизводстве = ОстаткиДляВидовСтадийОбработки.ВПроизводстве;
			ТекСтрока.НаСкладе = ОстаткиДляВидовСтадийОбработки.НаСкладе;
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОстаткиРесурсов()
	
	ОстаткиРесурсов = ПолучитьОстаткиРесурсов(Объект.ОстаткиРесурсов.Выгрузить().ВыгрузитьКолонку("Ресурс"));
	
	Для Каждого ТекСтрока Из Объект.ОстаткиРесурсов Цикл 
		
		ОстаткиРесурсов.Сбросить();
		СтруктураПоиска = Новый Структура;	
		СтруктураПоиска.Вставить("Ресурс", ТекСтрока.Ресурс);
		
		Если ОстаткиРесурсов.НайтиСледующий(СтруктураПоиска) Тогда 
			
			ТекСтрока.Остаток = ОстаткиРесурсов.Остаток;			
		КонецЕсли;
		
		Если ТекСтрока.Количество >= ТекСтрока.Остаток ИЛИ
			ТекСтрока.Остаток = 0 Тогда
							
			ТекСтрока.Занятость = 100;
		Иначе
			
			ТекСтрока.Занятость = ТекСтрока.Количество * 100 / ТекСтрока.Остаток;
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Функция ПолучитьМатериалыСтадииОбработки(Спецификация, СтадияОбработки, Количество = 1)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	mega_СпецификацииМатериалы.Номенклатура КАК Номенклатура,
	|	mega_СпецификацииМатериалы.Количество / mega_СпецификацииМатериалы.Ссылка.Количество * &Количество КАК Количество,
	|	mega_СпецификацииМатериалы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	mega_СпецификацииМатериалы.СтадияОбработки КАК ВидСтадииОбработки
	|ИЗ
	|	Справочник.mega_Спецификации.Материалы КАК mega_СпецификацииМатериалы
	|ГДЕ
	|	mega_СпецификацииМатериалы.Ссылка = &Спецификация
	|	И mega_СпецификацииМатериалы.КлючСвязи = &КлючСвязи";
	
	Запрос.УстановитьПараметр("Спецификация", Спецификация);
	Запрос.УстановитьПараметр("КлючСвязи", СтадияОбработки.КлючСвязи);
	Запрос.УстановитьПараметр("Количество", Количество);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Возврат Выборка;		
КонецФункции

//&НаСервере
//Процедура ЗаполнитьМатериалыСтадииОбработки(СтрокаСостав)
//КонецПроцедуры

&НаСервере
Процедура ЗаполнитьМатериалыСтадииОбработки(СтрокаСостав)
	
	СтадияОбработки = Справочники.mega_Спецификации.ПолучитьСтадиюОбработкиПоВидуСтадииОбработки(
		СтрокаСостав.Спецификация, СтрокаСостав.ВидСтадииОбработки);
	
	Количество = Справочники.mega_ЕдиницыИзмерения.ПеревестиИзЕдиницыВЕдиницу(
		СтрокаСостав.Количество, СтрокаСостав.ЕдиницаИзмерения, 
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаСостав.Номенклатура, "ЕдиницаИзмерения"));	
	
	МатериалыСтадииОбработки = ПолучитьМатериалыСтадииОбработки(
		СтрокаСостав.Спецификация, СтадияОбработки, Количество);
		
	Пока МатериалыСтадииОбработки.Следующий() Цикл 
		
		НоваяСтрока = Объект.Материалы.Добавить();
		НоваяСтрока.Номенклатура = МатериалыСтадииОбработки.Номенклатура;
		НоваяСтрока.ЕдиницаИзмерения = МатериалыСтадииОбработки.ЕдиницаИзмерения;
		НоваяСтрока.Количество = МатериалыСтадииОбработки.Количество;
		НоваяСтрока.ВидСтадииОбработки = МатериалыСтадииОбработки.ВидСтадииОбработки;
		
	КонецЦикла;
	
	ПредыдущаяСтадияОбработки = Справочники.mega_Спецификации.ПолучитьПредыдущуюСтадиюОбработки(
		СтрокаСостав.Спецификация, СтадияОбработки);
		
	Если ЗначениеЗаполнено(ПредыдущаяСтадияОбработки.ВидСтадииОбработки) Тогда 
		
		НоваяСтрока = Объект.Материалы.Добавить();
		НоваяСтрока.Номенклатура = СтрокаСостав.Номенклатура;
		//НоваяСтрока.ЕдиницаИзмерения = СтрокаСостав.ЕдиницаИзмерения;
		НоваяСтрока.ЕдиницаИзмерения = 
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаСостав.Номенклатура, "ЕдиницаИзмерения");
		//НоваяСтрока.Количество = СтрокаСостав.Количество;
		НоваяСтрока.Количество = Количество;
		НоваяСтрока.ВидСтадииОбработки = ПредыдущаяСтадияОбработки.ВидСтадииОбработки;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВидыСтадийОбработкиСпецификации(СтрокаСостав)
	
	Количество = Справочники.mega_ЕдиницыИзмерения.ПеревестиИзЕдиницыВЕдиницу(
		СтрокаСостав.Количество, СтрокаСостав.ЕдиницаИзмерения, 
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаСостав.Номенклатура, "ЕдиницаИзмерения"));
	
	СтадииОбработки = Справочники.mega_Спецификации.ПолучитьСтадииОбработкиСпецификации(СтрокаСостав.Спецификация);
	Пока СтадииОбработки.Следующий() Цикл 
		
		НоваяСтрока = Объект.ВидыСтадийОбработки.Добавить();
		НоваяСтрока.Номенклатура = СтрокаСостав.Номенклатура;
		НоваяСтрока.ВидСтадииОбработки = СтадииОбработки.ВидСтадииОбработки;
		НоваяСтрока.ЕдиницаИзмерения = СтрокаСостав.ЕдиницаИзмерения;
		НоваяСтрока.Количество = Количество;	
		
		//@skip-check query-in-loop
		ЗаполнитьМатериалыВидыСтадийОбработки(СтрокаСостав.Спецификация, НоваяСтрока.ВидСтадииОбработки, Количество);			
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьМатериалыВидыСтадийОбработки(Спецификация, ВидСтадииОбработки, Количество)
		
	МатериалыСпецификации = Справочники.mega_Спецификации.ПолучитьМатериалыВидаСтадииОбработкиСпецификации(
		Спецификация, ВидСтадииОбработки, Количество);
		
	Пока МатериалыСпецификации.Следующий() Цикл 
		
		НоваяСтрока = Объект.Материалы.Добавить();
		НоваяСтрока.Номенклатура = МатериалыСпецификации.Номенклатура;
		НоваяСтрока.ЕдиницаИзмерения = МатериалыСпецификации.ЕдиницаИзмерения;
		НоваяСтрока.ВидСтадииОбработки = МатериалыСпецификации.СтадияОбработки;				
		НоваяСтрока.Количество = МатериалыСпецификации.Количество;
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Функция ПолучитьРесурсыСтадииОбработки(Спецификация, СтадияОбработки, Количество = 1)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	mega_СпецификацииТехнологическиеОперации.Номенклатура КАК Номенклатура,
	|	mega_СпецификацииТехнологическиеОперации.Количество / mega_СпецификацииТехнологическиеОперации.Ссылка.Количество * &Количество КАК Количество,
	|	mega_СпецификацииТехнологическиеОперации.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	mega_СпецификацииТехнологическиеОперации.Номенклатура.ПроизводственныйРесурс КАК ПроизводственныйРесурс
	|ИЗ
	|	Справочник.mega_Спецификации.ТехнологическиеОперации КАК mega_СпецификацииТехнологическиеОперации
	|ГДЕ
	|	mega_СпецификацииТехнологическиеОперации.Ссылка = &Спецификация
	|	И mega_СпецификацииТехнологическиеОперации.КлючСвязи = &КлючСвязи";
	
	Запрос.УстановитьПараметр("Спецификация", Спецификация);
	Запрос.УстановитьПараметр("КлючСвязи", СтадияОбработки.КлючСвязи);
	Запрос.УстановитьПараметр("Количество", Количество);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Возврат Выборка;
КонецФункции

&НаСервере
Процедура ЗаполнитьРесурсыСтадииОбработки(СтрокаСостав)
	
	СтадияОбработки = Справочники.mega_Спецификации.ПолучитьСтадиюОбработкиПоВидуСтадииОбработки(
		СтрокаСостав.Спецификация, СтрокаСостав.ВидСтадииОбработки);
	
	Количество = Справочники.mega_ЕдиницыИзмерения.ПеревестиИзЕдиницыВЕдиницу(
		СтрокаСостав.Количество, СтрокаСостав.ЕдиницаИзмерения, 
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаСостав.Номенклатура, "ЕдиницаИзмерения"));
	
	ТехнологическиеОперацииСтадииОбработки = ПолучитьРесурсыСтадииОбработки(
		СтрокаСостав.Спецификация, СтадияОбработки, Количество);
		
	Пока ТехнологическиеОперацииСтадииОбработки.Следующий() Цикл 
		
		НоваяСтрока = Объект.Ресурсы.Добавить();
		НоваяСтрока.Номенклатура = ТехнологическиеОперацииСтадииОбработки.Номенклатура;
		НоваяСтрока.ЕдиницаИзмерения = ТехнологическиеОперацииСтадииОбработки.ЕдиницаИзмерения;
		НоваяСтрока.Количество = ТехнологическиеОперацииСтадииОбработки.Количество;
		НоваяСтрока.Ресурс = ТехнологическиеОперацииСтадииОбработки.ПроизводственныйРесурс;		
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Функция ПолучитьРесурсыСпецификации(Спецификация, Количество)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТехнологическиеОперации.Номенклатура КАК Номенклатура,
		|	ТехнологическиеОперации.Количество / ТехнологическиеОперации.Ссылка.Количество * &Количество КАК Количество,
		|	ТехнологическиеОперации.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ТехнологическиеОперации.Номенклатура.ПроизводственныйРесурс КАК ПроизводственныйРесурс
		|ИЗ
		|	Справочник.mega_Спецификации.ТехнологическиеОперации КАК ТехнологическиеОперации
		|ГДЕ
		|	ТехнологическиеОперации.Ссылка = &Спецификация";
	
	Запрос.УстановитьПараметр("Спецификация", Спецификация);
	Запрос.УстановитьПараметр("Количество", Количество);	
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Возврат ВыборкаДетальныеЗаписи;	
КонецФункции

&НаСервере
Процедура ЗаполнитьРесурсыСпецификации(СтрокаСостав)
	
	Количество = Справочники.mega_ЕдиницыИзмерения.ПеревестиИзЕдиницыВЕдиницу(
		СтрокаСостав.Количество, СтрокаСостав.ЕдиницаИзмерения, 
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаСостав.Номенклатура, "ЕдиницаИзмерения"));
	
	РесурсыСпецификации = ПолучитьРесурсыСпецификации(СтрокаСостав.Спецификация, Количество);
	Пока РесурсыСпецификации.Следующий() Цикл 
		
		НоваяСтрока = Объект.Ресурсы.Добавить();
		НоваяСтрока.Номенклатура = РесурсыСпецификации.Номенклатура;
		НоваяСтрока.ЕдиницаИзмерения = РесурсыСпецификации.ЕдиницаИзмерения;
		НоваяСтрока.Количество = РесурсыСпецификации.Количество;
		НоваяСтрока.Ресурс = РесурсыСпецификации.ПроизводственныйРесурс;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура РассчитатьМатериалыИРаботыНаСервере()
	
	Объект.ВидыСтадийОбработки.Очистить();
	Объект.Материалы.Очистить();
	Объект.Ресурсы.Очистить();
	Объект.ОстаткиРесурсов.Очистить();
	
	Для Каждого ТекСтрокаСостав Из Объект.Состав Цикл 
		
		Если НЕ ЗначениеЗаполнено(ТекСтрокаСостав.Спецификация) Тогда 
			
			Продолжить;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ТекСтрокаСостав.ВидСтадииОбработки) Тогда
			
			//@skip-check query-in-loop
			//ЗаполнитьВидыСтадииОбработки(ТекСтрокаСостав);			
			//@skip-check query-in-loop
			//ЗаполнитьМатериалыСтадииОбработки(ТекСтрокаСостав);
			//@skip-check query-in-loop			
			//ЗаполнитьРесурсыСтадииОбработки(ТекСтрокаСостав);
		Иначе
			
			//@skip-check query-in-loop
			ЗаполнитьВидыСтадийОбработкиСпецификации(ТекСтрокаСостав);
						
			//@skip-check query-in-loop
			ЗаполнитьРесурсыСпецификации(ТекСтрокаСостав);
		КонецЕсли;
	КонецЦикла;
	
	ВидыСтадийОбработки = Объект.ВидыСтадийОбработки.Выгрузить();
	ВидыСтадийОбработки.Свернуть("Номенклатура,ЕдиницаИзмерения,ВидСтадииОбработки", "Количество");
	Объект.ВидыСтадийОбработки.Загрузить(ВидыСтадийОбработки);
	ЗаполнитьОстаткиВидовСтадийОбработки();
	
	
	Материалы = Объект.Материалы.Выгрузить();
	Материалы.Свернуть("Номенклатура,ЕдиницаИзмерения,ВидСтадииОбработки", "Количество");
	Объект.Материалы.Загрузить(Материалы);	
	ЗаполнитьОстаткиМатериалов();
	
	
	Ресурсы = Объект.Ресурсы.Выгрузить();
	Ресурсы.Свернуть("Номенклатура,ЕдиницаИзмерения,Ресурс", "Количество");
	Объект.Ресурсы.Загрузить(Ресурсы);

	Ресурсы.Свернуть("Ресурс", "Количество");
	Объект.ОстаткиРесурсов.Загрузить(Ресурсы);
	ЗаполнитьОстаткиРесурсов();
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПриИзмененииНоменклатурыНаСервере(Структура)
	
	Структура.ЕдиницаИзмерения = Справочники.mega_ЕдиницыИзмерения.ПустаяСсылка();
	Структура.Спецификация = Справочники.mega_Спецификации.ПустаяСсылка();
	Структура.ВидСтадииОбработки = Справочники.mega_ВидыСтадийОбработки.ПустаяСсылка();
	Структура.Количество = 0;	
		
	Если ЗначениеЗаполнено(Структура.Номенклатура) Тогда
		
		Структура.ЕдиницаИзмерения = 
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Структура.Номенклатура, "ЕдиницаИзмерения");		
		Структура.Спецификация = Справочники.mega_Спецификации.ПолучитьОсновнуюСпецификациюНоменклатуры(Структура.Номенклатура);
		
		Структура.Количество = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Структура.Спецификация, "Количество");		
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДоступныеВидыСтадийОбработкиПоСпецификацииНаСервере(Спецификация)
	Возврат Справочники.mega_Спецификации.ПолучитьДоступныеВидыСтадийОбработки(
		Спецификация);
КонецФункции

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормыСостав

&НаКлиенте
Процедура СоставПриИзменении(Элемент)
	
	ЗаполнитьОстатки();
КонецПроцедуры

&НаКлиенте
Процедура СоставНоменклатураПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Состав.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		
		Структура = Новый Структура(
		"Номенклатура,
		|Спецификация,
		|ЕдиницаИзмерения,
		|ВидСтадииОбработки,
		|Количество");
		ЗаполнитьЗначенияСвойств(Структура, ТекущиеДанные);
		ПриИзмененииНоменклатурыНаСервере(Структура);
		ЗаполнитьЗначенияСвойств(ТекущиеДанные, Структура);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СоставВидСтадииОбработкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	ТекущиеДанные = Элементы.Состав.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		
		Спецификация = ТекущиеДанные.Спецификация;
		Если ЗначениеЗаполнено(Спецификация) Тогда			
	
			ВидыСтадийОбработки = Новый СписокЗначений(); 
			//ВидыСтадийОбработки.ЗагрузитьЗначения(ПолучитьДоступныеВидыСтадийОбработкиНаСервере(Спецификация));
			ВидыСтадийОбработки.ЗагрузитьЗначения(
				ПолучитьДоступныеВидыСтадийОбработкиПоСпецификацииНаСервере(Спецификация));
			ДанныеВыбора = ВидыСтадийОбработки;
			
			СтандартнаяОбработка = Ложь;
		КонецЕсли;
	КонецЕсли;	

КонецПроцедуры


#КонецОбласти



