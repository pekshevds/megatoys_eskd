///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2023, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы

// Код процедур и функций



#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Код процедур и функций

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПоставщики //<ИмяТаблицыФормы>

&НаКлиенте
Процедура ЗаявкиВнутренниеПриИзменении(Элемент)
	
	РассчитатьФлагРаскраскиНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПоставщикиПриИзменении(Элемент)
	
	ЗаполнитьЗаявкиВнутренниеНаКлиенте();	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьЗаявкиВнутренние(Команда)
	
	ЗаполнитьЗаявкиВнутренниеНаКлиенте();	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьКолонки(Команда)
	
	СоздатьКолонкиНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ЗаказатьУПоставщиков(Команда)
	
	Для Каждого ТекСтрокаПоставщики Из Поставщики Цикл
		
		Форма = ПолучитьФорму("Документ.mega_ЗаявкаПоставщику.ФормаОбъекта",,, Истина);
		ЗаявкаПоставщику = Форма.Объект;
		
		ЗаполнитьДокументНаСервере = ЗаполнитьДокументНаСервере(ЗаявкаПоставщику, ТекСтрокаПоставщики.Поставщик);
		Если ЗаполнитьДокументНаСервере Тогда
			
			КопироватьДанныеФормы(ЗаявкаПоставщику, Форма.Объект);
			Форма.Модифицированность = Истина;
			Форма.Открыть();		
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ЗаполнитьДокументНаСервере(ЗаявкаПоставщику, Поставщик)	
	ЗаявкаПоставщику.Поставщик = Поставщик;
		
	УИД = СтрЗаменить(Строка(Поставщик.УникальныйИдентификатор()), "-", "");
	Флаг = Ложь;
	Для Каждого ТекСтрокаЗаявкиВнутренние Из ЗаявкиВнутренние Цикл
		
		Если ТекСтрокаЗаявкиВнутренние["Количество_" + УИД] > 0 Тогда
			
			НоваяСтрока = ЗаявкаПоставщику.Состав.Добавить();
			НоваяСтрока.Номенклатура = ТекСтрокаЗаявкиВнутренние.Номенклатура;
			НоваяСтрока.ЕдиницаИзмерения = 
				ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекСтрокаЗаявкиВнутренние.Номенклатура, "ЕдиницаИзмерения");
			НоваяСтрока.Количество = ТекСтрокаЗаявкиВнутренние["Количество_" + УИД];
			Флаг = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Флаг;
КонецФункции

&НаСервере
Процедура РассчитатьФлагРаскраскиНаСервере()
	
	Для Каждого ТекСтрокаЗаявкиВнутренние Из ЗаявкиВнутренние Цикл
		
		Количество = 0;
		Для Каждого ТекСтрокаПоставщики Из Поставщики Цикл
			
			УИД = СтрЗаменить(Строка(ТекСтрокаПоставщики.Поставщик.УникальныйИдентификатор()), "-", ""); 
			Количество = Количество + ТекСтрокаЗаявкиВнутренние["Количество_" + УИД];
		КонецЦикла;
		
		ТекСтрокаЗаявкиВнутренние.ФлагРаскраски = (Количество >= ТекСтрокаЗаявкиВнутренние.Количество);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЗаявкиВнутренниеНаКлиенте()
	
	ЗаполнитьЗаявкиВнутренниеНаСервере();
КонецПроцедуры

&НаСервере
Функция ПолучитьКолонкиДляУдаления()
	
	КолонкиДляУдаления = Новый Массив;
	Для Каждого Элемент Из Элементы Цикл
		
		Если Найти(Элемент.Имя, "ЗаявкиВнутренние_Группа") > 0 И 
			Найти(Элемент.Имя, "РасширеннаяПодсказка") = 0 Тогда
					
		 	КолонкиДляУдаления.Добавить(Элемент.Имя);
		 КонецЕсли;
	КонецЦикла;
	
	Возврат КолонкиДляУдаления;
КонецФункции

&НаСервере
Процедура УдалитьКолонкиНаСервере()
	
	МассивРеквизитов = Новый Массив;
	КолонкиДляУдаления = ПолучитьКолонкиДляУдаления();
	
	Для Каждого Элемент Из КолонкиДляУдаления Цикл
		
		//Удаляем поле
		Если Элементы.Найти(Элемент) <> Неопределено Тогда
									
			Элементы.Удалить(Элементы[Элемент]);
		КонецЕсли;
		
		УИД = СтрЗаменить(Элемент, "ЗаявкиВнутренние_Группа_", "");
		МассивРеквизитов.Добавить("ЗаявкиВнутренние.Цена_" + УИД);
		МассивРеквизитов.Добавить("ЗаявкиВнутренние.Количество_" + УИД);			
	КонецЦикла;
	
	ИзменитьРеквизиты(, МассивРеквизитов);
КонецПроцедуры

&НаСервере
Функция СоздатьГруппуНаСервере(ИмяГруппы, ЗаголовокГруппы)
		
	НоваяГруппа = Элементы.Добавить("ЗаявкиВнутренние_" + ИмяГруппы, Тип("ГруппаФормы"), Элементы.ЗаявкиВнутренние);
	НоваяГруппа.Заголовок = ЗаголовокГруппы;
	НоваяГруппа.Группировка = ГруппировкаКолонок.Горизонтальная;
	НоваяГруппа.ОтображатьВШапке = Истина;
	НоваяГруппа.Ширина = 10;
	Возврат НоваяГруппа	
КонецФункции

&НаСервере
Процедура СоздатьКолонкуЦенаНаСервере(ИмяКолонки, ЗаголовокКолонки, Группа)
		
	НоваяКолонка = Новый РеквизитФормы(
			ИмяКолонки, 
			Новый ОписаниеТипов("Число",
				Новый КвалификаторыЧисла(15, 2, ДопустимыйЗнак.Неотрицательный)), 
			"ЗаявкиВнутренние");
			
	МассивРеквизитов = Новый Массив;
	МассивРеквизитов.Добавить(НоваяКолонка);
	ИзменитьРеквизиты(МассивРеквизитов);
	
	НовыйЭлемент = Элементы.Добавить("ЗаявкиВнутренние_" + ИмяКолонки, Тип("ПолеФормы"), Группа);
	НовыйЭлемент.Заголовок = ЗаголовокКолонки;
	НовыйЭлемент.ПутьКДанным = "ЗаявкиВнутренние." + ИмяКолонки;
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
	НовыйЭлемент.ТолькоПросмотр = Истина;
	НовыйЭлемент.Ширина = 10;	
КонецПроцедуры

&НаСервере
Процедура СоздатьКолонкуКоличествоНаСервере(ИмяКолонки, ЗаголовокКолонки, Группа)
		
	НоваяКолонка = Новый РеквизитФормы(
			ИмяКолонки, 
			Новый ОписаниеТипов("Число",
				Новый КвалификаторыЧисла(20, 5, ДопустимыйЗнак.Неотрицательный)), 
			"ЗаявкиВнутренние");
			
	МассивРеквизитов = Новый Массив;
	МассивРеквизитов.Добавить(НоваяКолонка);
	ИзменитьРеквизиты(МассивРеквизитов);
	
	НовыйЭлемент = Элементы.Добавить("ЗаявкиВнутренние_" + ИмяКолонки, Тип("ПолеФормы"), Группа);
	НовыйЭлемент.Заголовок = ЗаголовокКолонки;
	НовыйЭлемент.ПутьКДанным = "ЗаявкиВнутренние." + ИмяКолонки;
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
	НовыйЭлемент.Ширина = 10;	
КонецПроцедуры

&НаСервере
Процедура СоздатьКолонкиНаСервере()
				
	Для Каждого Элемент Из Поставщики Цикл
		
		Поставщик = Элемент.Поставщик;		
		УИД = СтрЗаменить(Строка(Поставщик.УникальныйИдентификатор()), "-", "");
		
		НоваяГруппа = СоздатьГруппуНаСервере("Группа_" + УИД, Строка(Поставщик));
		СоздатьКолонкуЦенаНаСервере("Цена_" + УИД, "Цена", НоваяГруппа);
		СоздатьКолонкуКоличествоНаСервере("Количество_" + УИД, "Заказать", НоваяГруппа);
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоОстаткамНаСервере()
				
	ЗаявкиВнутренние.Очистить();
	
	ВыборкаДетальныеЗаписи = РегистрыНакопления.mega_ЗавкиВнутренниеКРазмещению.ПолучитьОстатки();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		НоваяСтрока = ЗаявкиВнутренние.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДетальныеЗаписи);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЦеныНаСервере()

	МассивПоставщиков = Поставщики.Выгрузить().ВыгрузитьКолонку("Поставщик");
	МассивНоменклатуры = ЗаявкиВнутренние.Выгрузить().ВыгрузитьКолонку("Номенклатура");
	ВыборкаДетальныеЗаписи = 
		РегистрыСведений.mega_ЦеныПоставщиков.ПолучитьЦеныПоставщиков(МассивПоставщиков, МассивНоменклатуры);
	
	Для Каждого ТекСтрокаЗаявкиВнутренние Из ЗаявкиВнутренние Цикл
		Для Каждого ТекСтрокаПоставщики Из Поставщики Цикл
			
			ВыборкаДетальныеЗаписи.Сбросить();
			
			СтруктураПоиска = Новый Структура;
			СтруктураПоиска.Вставить("Номенклатура", ТекСтрокаЗаявкиВнутренние.Номенклатура);
			СтруктураПоиска.Вставить("Поставщик", ТекСтрокаПоставщики.Поставщик);
			
			УИД = СтрЗаменить(Строка(ТекСтрокаПоставщики.Поставщик.УникальныйИдентификатор()), "-", "");
			Если ВыборкаДетальныеЗаписи.НайтиСледующий(СтруктураПоиска) Тогда
				
				ТекСтрокаЗаявкиВнутренние["Цена_" + УИД] = ВыборкаДетальныеЗаписи.Цена;
			КонецЕсли;
			
			ОсновнойПоставщик = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекСтрокаЗаявкиВнутренние.Номенклатура, "Поставщик");
			Если ОсновнойПоставщик = ТекСтрокаПоставщики.Поставщик Тогда
				
				ТекСтрокаЗаявкиВнутренние["Количество_" + УИД] = ТекСтрокаЗаявкиВнутренние.Количество;
			КонецЕсли;			
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЗаявкиВнутренниеНаСервере()
	
	УдалитьКолонкиНаСервере();
	СоздатьКолонкиНаСервере();
	
	ЗаполнитьПоОстаткамНаСервере();
	ЗаполнитьЦеныНаСервере();
КонецПроцедуры

#КонецОбласти
